<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://tars-c.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tars-c.github.io/" rel="alternate" type="text/html" /><updated>2020-05-21T20:34:00+09:00</updated><id>https://tars-c.github.io/feed.xml</id><title type="html">타스의 개발 블로그</title><author><name>타스 (TARS-C)</name></author><entry><title type="html">[MFC] 공 튀기기, 땡겨서 이동시키기 (이미지)</title><link href="https://tars-c.github.io/2020-05-20/sketch-ball" rel="alternate" type="text/html" title="[MFC] 공 튀기기, 땡겨서 이동시키기 (이미지)" /><published>2020-05-20T00:00:00+09:00</published><updated>2020-05-20T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-20/%EA%B3%B5%EB%86%80%EC%9D%B4</id><content type="html" xml:base="https://tars-c.github.io/2020-05-20/sketch-ball">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;카카오톡 개발방에 들어가면 가끔&lt;br /&gt;
누군가에게는 힘든 나에게는 할만한 과제가 보인다.&lt;br /&gt;
많은 신입 대학생분들이 과제를 올리면서 도와달라고 한다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/MakeProgram/Sketch/kakao1.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/MakeProgram/Sketch/kakao2.png&quot; alt=&quot;img2&quot; /&gt;&lt;br /&gt;
그들을 도와주면 내가 아는 걸 다시 되새김질 함으로써 잊지 않을 수 있다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;재밌는 건 같은 학교인지 과제가 같은 사람도 종종보인다.&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;이번해볼 실습은 공을 튀기고 3번 멈추는 것이다.&lt;br /&gt;
너무 간단한거 같아서 공이 날라가는 강도를 조절할 수 있게 만들어봤다.
조금 수학에서 해멨지만 그래도 만들었다.&lt;/p&gt;

&lt;p&gt;복잡한 구조 및 클래스 생성보다는&lt;br /&gt;
단순하게 View.cpp에서 그림을 그리고 계산했다.&lt;/p&gt;

&lt;h2 id=&quot;프로그램-모습&quot;&gt;프로그램 모습&lt;/h2&gt;

&lt;p&gt;결과:&lt;br /&gt;
&lt;img src=&quot;/assets/images/MakeProgram/Sketch/sketch-ball.gif&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;피타고라스 개념 부분만 참고해서 만들었다.&lt;br /&gt;
다 만들고서 느낀 점이 아직 보완할 점이 많다는 것이다.&lt;/p&gt;

&lt;p&gt;이런 실습은 여러 대학에서 과제로 제출되기 때문에&lt;br /&gt;
코드를 공개하여 대학생분들에게 도움을 주고 싶었다.&lt;br /&gt;
공부를 하고 있다면 &lt;del&gt;지저분한&lt;/del&gt; 코드를 보면서 하나씩 원리를 깨우치며 배우길 바란다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;이 코드도 완벽하진 않다.&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;추가-내용-1&quot;&gt;추가 내용 1&lt;/h3&gt;
&lt;p&gt;각도 계산이 부족해보여서 개선 후 Git에 커밋했다.&lt;br /&gt;
이젠 버그도 없고 어느정도 실행하는데 잘되는 것 같다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(사실 버그 없는 프로그램이 더 이상하게 다가온다)&lt;/del&gt;&lt;/strong&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;추가내용-2&quot;&gt;추가내용 2&lt;/h3&gt;
&lt;p&gt;각도 고정 기능을 추가하여 사용자가 편리하게 날릴 수 있게 만들었다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(그림판처럼, 포토샵처럼 Shift 키의 쓰임을 써보고 싶었다.)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;키보드 관련 이슈가 있었으나 개인문제라는걸 5시간 후에 알았다…&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;함수 최적화는 나중을 기약하고 있다.&lt;br /&gt;
누군가에게 작은 도움이 되었으면 하는 바램이다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;쓰레드를 이용해 개선도 해볼까?&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;공놀이 개발에 맛들이긴 했지만.. 할 것이 산더미다.&lt;/del&gt;&lt;/strong&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;저장소-링크&quot;&gt;저장소 링크&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/tars-c/Sketch&quot; target=&quot;_blank&quot;&gt;Github Repository: Sketch Ball&lt;/a&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="공놀이" /><category term="Sketch" /><category term="공" /><category term="Ball" /><category term="원" /><category term="Ellipse" /><category term="공튀기기" /><summary type="html">[MFC] 공 튀기기, 땡겨서 이동시키기 (이미지)</summary></entry><entry><title type="html">[MFC][실습] Subclassing (이미지)</title><link href="https://tars-c.github.io/2020-05-18/mfc-subclassing" rel="alternate" type="text/html" title="[MFC][실습] Subclassing (이미지)" /><published>2020-05-18T00:00:00+09:00</published><updated>2020-05-18T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-18/%EC%84%9C%EB%B8%8C%ED%81%B4%EB%9E%98%EC%8B%B1</id><content type="html" xml:base="https://tars-c.github.io/2020-05-18/mfc-subclassing">&lt;h1 id=&quot;서론&quot;&gt;서론&lt;/h1&gt;
&lt;p&gt;MFC에서 제공하는 컨트롤 및 뷰는 가장 단순하고&lt;br /&gt;
가장 기본적인 기능만 제공하고 있다.&lt;/p&gt;

&lt;p&gt;기능을 더 확장 및 변경하기 위해서는&lt;br /&gt;
기본으로 제공하는 컨트롤 및 뷰를 상속받아 기능을 확장해야한다.&lt;/p&gt;

&lt;p&gt;기능을 확장한다는 의미는&lt;br /&gt;
기존 컨트롤에 개발자가 기능을 덧붙여&lt;br /&gt;
새로운 컨트롤을 만든다는 의미와 같다.&lt;/p&gt;

&lt;p&gt;컨트롤 및 뷰를 확장하기 위해서는 서브클래싱(Subclassing)을 통해 진행한다.&lt;br /&gt;
서브클래싱을 이용해 윈도우 프로시저에서 보내지는 메시지를 가로채어 기능을 확장한다.&lt;br /&gt;
서브 클래싱은 CWnd 객체에 연결 및 윈도우 프로시저 함수를 대체하는 것이다.&lt;/p&gt;

&lt;p&gt;가로챈 메시지는 윈도우 프로시저에게 전달해 줄 수도 있고&lt;br /&gt;
해당 컨트롤이 처리 후 다른 윈도우 프로시저에게 전달하지 않을 수 있다.&lt;/p&gt;

&lt;p&gt;PreTranslateMessage() 가상함수에서도 메시지를 가로챌 수 있지만&lt;br /&gt;
코드가 길어질 수록 구조가 복잡하게 변할 위험이 있다.&lt;/p&gt;

&lt;p&gt;MFC 2.x, WINAPI에서는 복잡한 함수 호출 과정을 거쳤지만&lt;br /&gt;
4.x 버전이후부터는 과정이 단순하게 개선되었다.&lt;/p&gt;

&lt;p&gt;서브 클래싱은 2가지로 구분한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;정적 서브 클래싱&lt;/li&gt;
  &lt;li&gt;동적 서브 클래싱&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정적-서브-클래싱&quot;&gt;정적 서브 클래싱&lt;/h2&gt;
&lt;p&gt;정적 서브 클래싱은 간단하게 말해서 DDX와 연결된 서브 클래싱을 의미한다.&lt;br /&gt;
기본 타입(CEdit)으로 연결된 것을 확장타입(CMyEdit)으로 DDX_Control 연결을 하는 것이다.&lt;br /&gt;
가장 중요한건 동적 서브 클래싱이기에 간단히만 알아보도록 한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;DDX_Control(pDX, IDC_MYEDIT, m_edit);&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;동적-서브-클래싱&quot;&gt;동적 서브 클래싱&lt;/h2&gt;
&lt;p&gt;동적 서브 클래싱을 하기 위해 필요한 함수는&lt;br /&gt;
CWnd::SubclassDlgItem() 및 CWnd::SubSubclassWindow() 이다.&lt;br /&gt;
런타임에서 서브클래싱을 할 수 있다.&lt;br /&gt;
프로그램이 실행 되면서 프로시저를 변경할 때 아주 유용하게 쓰인다.&lt;br /&gt;
프로시저가 변경된다는 것은 프로그램의 처리 결과를 바뀌게 된다는 의미이다.&lt;/p&gt;

&lt;h2 id=&quot;unsubclasswindow-함수&quot;&gt;UnsubclassWindow() 함수&lt;/h2&gt;
&lt;p&gt;서브 클래싱을 동적으로 해제해줄 수 있는 함수이다.&lt;br /&gt;
이 함수를 해제하면 기본 윈도우 프로시저가 메시지를 처리하게 된다.&lt;br /&gt;
동적 서브 클래싱이 되지 않은 객체한테 사용하면 Crash를 겪게될 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;subclassdlgitem-함수&quot;&gt;SubclassDlgItem() 함수&lt;/h2&gt;
&lt;p&gt;서브 클래싱할 컨트롤 리소스 ID와 부모 윈도우 포인터를 요구한다. (IDC_MYEDIT)&lt;br /&gt;
부모는 보통 폼에 컨트롤을 배치하기 때문에 View의 포인터를 적어준다.&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A.SubclassDlgItem(B, C);&lt;br /&gt;
-&amp;gt; 부모 C의 배치된 B 컨트롤 프로시저를 A가 지닌 프로시저로 대체한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;만약 컨트롤이 단계별로 여러개의 컨트롤로 구성되어 있을 땐&lt;br /&gt;
View가 아닌 해당 컨트롤이 배치되는 부모 컨트롤의 포인터를 적어주도록 한다.&lt;/p&gt;

&lt;h3 id=&quot;코드-및-실습&quot;&gt;코드 및 실습&lt;/h3&gt;
&lt;p&gt;구현은 다음과 같이 진행한다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;CFormView 를 상속받는 SDI 프로젝트를 만든다. (TESUB)&lt;/li&gt;
  &lt;li&gt;폼에 Edit Control(IDC_MYEDIT), Button Control(IDC_BUTTON1) 을 배치한다.&lt;/li&gt;
  &lt;li&gt;기존 CEdit을 상속받아 새로운 컨트롤 클래스를 만든다. (CMyEdit)
    &lt;ul&gt;
      &lt;li&gt;WM_CTLCOLOR 핸들러 추가 및 적용
        &lt;ul&gt;
          &lt;li&gt;텍스트 색상: 빨간색&lt;/li&gt;
          &lt;li&gt;배경모드: 투명&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;WM_CHAR 핸들러 추가 및 적용
        &lt;ul&gt;
          &lt;li&gt;숫자만 입력 가능하게 처리&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;View.h 에서 다음과 같이 진행한다.
    &lt;ul&gt;
      &lt;li&gt;#include &quot;CMyEdit.h&quot; 추가&lt;/li&gt;
      &lt;li&gt;CMyEdit 변수 선언(m_MyEdit)&lt;/li&gt;
      &lt;li&gt;플래그 변수 선언(m_initFlag)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;View.cpp 에서 IDC_BUTTON1 컨트롤 BN_CLICKED 메시지 처리
    &lt;ul&gt;
      &lt;li&gt;버튼을 누르면 서브 클래싱이 되어 프로시저 변경&lt;/li&gt;
      &lt;li&gt;서브클래싱이 적용된 상태에서 다시 버튼을 누르면 서브 클래싱이 해제&lt;/li&gt;
      &lt;li&gt;서브클래싱 적용 / 미적용 텍스트 변경 (플래그 값 변경됨)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;figcaption&gt;CMyEdit.h&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;#pragma once
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CMyEdit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;DECLARE_DYNAMIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;protected:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;DECLARE_MESSAGE_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;afx_msg&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnChar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nChar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nRepCnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nFlags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;afx_msg&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HBRUSH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CtlColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*pDC*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*nCtlColor*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PreSubclassWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//나머지 생략&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figcaption&gt;CMyEdit.cpp&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;BEGIN_MESSAGE_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ON_CONTROL_REFLECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EN_CHANGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnEnChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ON_WM_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ON_WM_CTLCOLOR_REFLECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;END_MESSAGE_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnChar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nChar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nRepCnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nFlags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// TODO: 여기에 메시지 처리기 코드를 추가 및/또는 기본값을 호출합니다.&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nChar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nChar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'9'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nChar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VK_BACK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnChar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nChar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nRepCnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nFlags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HBRUSH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CtlColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pDC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nCtlColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// TODO:  여기서 DC의 특성을 변경합니다.&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;HBRUSH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hBrush&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nCtlColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CTLCOLOR_EDIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;hBrush&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CreateSolidBrush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RGB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetBkMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRANSPARENT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;pDC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetTextColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RGB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;210&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hBrush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreSubclassWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// TODO: 여기에 특수화된 코드를 추가 및/또는 기본 클래스를 호출합니다.&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;Invalidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;SetFocus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreSubclassWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;figcaption&gt;TESUBView.h&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;#pragma once
#include &quot;CMyEdit.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CTESUBView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFormView&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;protected:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// serialization에서만 만들어집니다.&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;noexcept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;DECLARE_DYNCREATE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#ifdef AFX_DESIGN_TIME
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDD_TESUB_FORM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;protected:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;DECLARE_MESSAGE_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 작업입니다.&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_initFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CMyEdit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_myEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;afx_msg&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OnBnClickedButton1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figcaption&gt;TESUBView.cpp&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;BEGIN_MESSAGE_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFormView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;ON_BN_CLICKED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDC_BUTTON1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnBnClickedButton1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;END_MESSAGE_MAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;noexcept&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFormView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDD_TESUB_FORM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_initFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnBnClickedButton1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_initFlag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetFocus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWindowText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;서브클래싱 미적용&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;m_myEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SubclassDlgItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDC_MYEDIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;GetFocus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWindowText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;서브클래싱 적용&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;m_myEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UnsubclassWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;Invalidate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;m_initFlag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_initFlag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;주의사항&quot;&gt;주의사항&lt;/h3&gt;
&lt;p&gt;WM_CTLCOLOR 핸들러는  새로운 컨트롤의 모습을 갱신하기 위해서는&lt;br /&gt;
서브 클래싱이 적용된 순간 컨트롤을 새롭게 그릴 수 있게 Invalidate() 함수를 호출한다.&lt;br /&gt;
SetFocus() 함수를 이용해서 즉시 화면을 갱신한다.&lt;/p&gt;

&lt;p&gt;서브 클래싱 해제 시에는 서브 클래싱 객체에 접근할 수 없기 때문에&lt;br /&gt;
컨트롤이 배치된 부모 컨트롤(View)에 접근해서 Invalidate() 함수를 호출하여 화면을 새로 그린다.&lt;/p&gt;

&lt;h3 id=&quot;결과&quot;&gt;결과&lt;/h3&gt;
&lt;p&gt;서브 클래싱 버튼을 누르면 프로시저가 대체되면서 숫자만 입력 가능하게 변경된다.&lt;br /&gt;
또 컨트롤 입력창 텍스트의 색상은 빨간색으로 변경된다.&lt;/p&gt;

&lt;p&gt;Result.gif File(4.24MB)&lt;br /&gt;
&lt;img src=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FJwAW1%2FbtqEeYjfXZx%2FzawoqCbtGBNro1ihJA1KL1%2Fimg.gif&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;subclasswindow-함수&quot;&gt;SubclassWindow() 함수&lt;/h2&gt;
&lt;p&gt;프로시저를 바꿀 윈도우의 핸들을 요구한다.&lt;br /&gt;
핸들이 참조하고 있는 객체의 CWnd 객체로 연결되고 윈도우가 가지고 있는 핸들의 프로시저가 변경된다.&lt;br /&gt;
CWnd 객체는 MFC 윈도우 클래스이다.&lt;/p&gt;

&lt;p&gt;이 함수는 WINAPI로 만들어진 윈도우 및 컨트롤을 서브 클래싱할 때 사용된다.&lt;br /&gt;
WINAPI와 혼용해서 사용하도록 하자.&lt;/p&gt;

&lt;p&gt;CWnd 객체 포인터를 가진 객체에게 위 함수를 이용해 서브클래싱을 시도하는 경우 Crash가 발생할 수 있다.&lt;br /&gt;
VERIFY, ASSERT 매크로 함수를 이용해 사용하는 것이 런타임에서 안전하다.&lt;br /&gt;
가능한 WINAPI에서 핸들을 얻어올 때 사용하자.&lt;/p&gt;

&lt;p&gt;WINAPI GetWindow() 함수를 이용해 자식 컨트롤의 핸들을 얻어 사용할 수도 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A.SubClassWindow(C)&lt;br /&gt;
-&amp;gt; C 핸들을 가지고 있는 윈도우의 프로시저를 A 객체 프로시저로 대체한다.&lt;br /&gt;
-&amp;gt; C의 핸들 값이 A에게 주어진다. (두 핸들이 서로 동일해짐)&lt;br /&gt;
-&amp;gt; CWnd 객체로 연결된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;복잡한 실습보다 아주 간단하게 사용만 해보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CTESUBView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnInitialUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;m_editHwnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Edit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WS_VISIBLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WS_CHILD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WS_BORDER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_hWnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AfxGetInstanceHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;m_myEdit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SubclassWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_editHwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;m_myEdit는 기본 CEdit를 상속받아 만든 CMyEdit 확장 클래스이다.&lt;br /&gt;
서브 클래싱을 하기 전에 m_myEdit은 null이다.&lt;br /&gt;
m_editHwnd 핸들값으로 CWnd 객체를 생성하고 m_myEdit에 연결시킨다.&lt;br /&gt;
객체가 연결됨으로 기본 프로시저가 아닌 CMyEdit 프로시저가 메시지를 처리한다.&lt;br /&gt;
추가로 m_myEdit 객체가 가지고 있는 함수도 이용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;글 다 썻다아 ~&lt;/strong&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="서브클래싱" /><category term="Subclassing" /><category term="SubclassDlgItem" /><category term="UnsubclassWindow" /><category term="SubclassWindow" /><summary type="html">[MFC][실습] Subclassing (이미지)</summary></entry><entry><title type="html">[WINAPI][CODE] USB 꺼내기 처리</title><link href="https://tars-c.github.io/2020-05-17/winapi-code-usb-eject" rel="alternate" type="text/html" title="[WINAPI][CODE] USB 꺼내기 처리" /><published>2020-05-17T00:00:00+09:00</published><updated>2020-05-17T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-17/USB%20%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80%20%EA%BA%BC%EB%82%B4%EA%B8%B0%20%EC%B2%98%EB%A6%AC</id><content type="html" xml:base="https://tars-c.github.io/2020-05-17/winapi-code-usb-eject">&lt;p&gt;아래 코드는 죠우저프님이 제공해주신 코드입니다.&lt;br /&gt;
죠우저프님의 허락을 받아 공유합니다.&lt;br /&gt;
WINAPI, C언어 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;///////////////////////////////////////////////////////////////////////////////&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//                      USB 스토리지 '꺼내기' 처리&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 시작일: 2020-05-17&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 프로그래머: 죠우저프&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;///////////////////////////////////////////////////////////////////////////////&lt;/span&gt;

&lt;span class=&quot;cp&quot;&gt;#undef  UNICODE
#define WIN32_LEAN_AND_MEAN
#include &amp;lt;Windows.h&amp;gt;
#include &amp;lt;Shlwapi.h&amp;gt;    //wvnsprintf()
#include &amp;lt;Setupapi.h&amp;gt;
#include &amp;lt;winioctl.h&amp;gt;
#include &amp;lt;cfgmgr32.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define Printf printf
#define LOCAL(type) static type WINAPI
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#pragma comment(lib, &quot;SETUPAPI.LIB&quot;)    //SetupDiDestroyDeviceInfoList()
&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//-----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//      주어진 드라이브의 물리드라이버 번호를 리턴함 (없으면 -1리턴)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  '\\.\H:' -&amp;gt; 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  '\\?\scsi#disk&amp;amp;ven_seagate&amp;amp;prod_bup_sl#000000#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}' -&amp;gt; 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  '\\?\ide#diskadata_sp550_____________________________o1230c__#5&amp;amp;28ae51b&amp;amp;0&amp;amp;0.0.0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}' -&amp;gt; 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  '\\?\scsi#diskromex___ramdisk_________2011#1&amp;amp;1a590e2c&amp;amp;0&amp;amp;000#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}' -&amp;gt; 0&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  '\\?\ide#diskwdc_wd10ezex-60wn4a0____________________01.01a01#5&amp;amp;2b6bfe7d&amp;amp;0&amp;amp;1.1.0#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}' -&amp;gt; 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  '\\?\usbstor#disk&amp;amp;ven_generic&amp;amp;prod_storage_device&amp;amp;rev_1404#6&amp;amp;965d76a&amp;amp;5#{53f56307-b6bf-11d0-94f2-00a0c91efb8b}' -&amp;gt; 4&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//-----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOCAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetPhysicalDeviceNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LPCSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VolAccPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;PhyDevNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HANDLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hVolume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;RetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;STORAGE_DEVICE_NUMBER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SDN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hVolume&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VolAccPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FILE_SHARE_READ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FILE_SHARE_WRITE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OPEN_EXISTING&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INVALID_HANDLE_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeviceIoControl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hVolume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IOCTL_STORAGE_GET_DEVICE_NUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SDN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SDN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;PhyDevNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SDN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DeviceNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;CloseHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hVolume&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Printf(&quot;'%s' -&amp;gt; %d\n&quot;, VolAccPath, PhyDevNo);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhyDevNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;




&lt;span class=&quot;c1&quot;&gt;//-----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//      주어진 드라이브의 인터페이스 핸들과 GUID를 얻음&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//-----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOCAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HDEVINFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetDeviceInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpGuid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HDEVINFO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INVALID_HANDLE_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CHAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DosDevName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;wsprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%c:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDriveType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DRIVE_REMOVABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;wsprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;%c:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QueryDosDevice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DosDevName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DosDevName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcExit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//'\Device\HarddiskVolume11' 이런 문자열 리턴&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DosDevName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Floppy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID_DEVINTERFACE_FLOPPY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID_DEVINTERFACE_DISK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DRIVE_FIXED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID_DEVINTERFACE_DISK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DRIVE_CDROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GUID_DEVINTERFACE_CDROM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nl&quot;&gt;default:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcExit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetupDiGetClassDevs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DIGCF_PRESENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIGCF_DEVICEINTERFACE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//Get device interface info set handle for all devices attached to system&lt;/span&gt;

    &lt;span class=&quot;nl&quot;&gt;ProcExit:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpGuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpGuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;



&lt;span class=&quot;c1&quot;&gt;//----------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//      주어진 드라이브의 디바이스 인스턴스 순번을 얻음&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//----------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOCAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DEVINST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetDrivesDevInst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PhyDevNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CHAR&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;VolAccPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEVINST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hDevInfoRslt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HDEVINFO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SP_DEVICE_INTERFACE_DETAIL_DATA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDIDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SP_DEVICE_INTERFACE_DATA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPDID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SP_DEVINFO_DATA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BYTE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDeviceInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INVALID_HANDLE_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcExit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;wsprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VolAccPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%c:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PhyDevNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPhysicalDeviceNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VolAccPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcExit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;SPDIDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SP_DEVICE_INTERFACE_DETAIL_DATA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SPDID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cbSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetupDiEnumDeviceInterfaces&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Guid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SetupDiGetDeviceInterfaceDetail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//필요한 버퍼크기를 얻음&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Buff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;SPDIDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cbSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDIDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;ZeroMemory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SPDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cbSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;sizeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetupDiGetDeviceInterfaceDetail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPDIDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;#if 0
            //USB의 VID와 PID를 알고 싶으면
            DEVINST DevInstParent=0;
            CM_Get_Parent(&amp;amp;DevInstParent, SPDD.DevInst, 0);
            CHAR DeviceId[MAX_PATH];
            CM_Get_Device_ID(DevInstParent, DeviceId, MAX_PATH, 0);
            Printf(&quot;PhyDevNo=%d, DevInst=%d, DeviceId=%s\n&quot;, GetPhysicalDeviceNumber(SPDIDD-&amp;gt;DevicePath), SPDD.DevInst, DeviceId);
                    //PhyDevNo=3, DevInst=1, DeviceId=USB\VID_0BC2&amp;amp;PID_AB30\MSFT30NA9SPF3M
                    //PhyDevNo=1, DevInst=2, DeviceId=PCIIDE\IDECHANNEL\4&amp;amp;1010A736&amp;amp;0&amp;amp;0
                    //PhyDevNo=0, DevInst=3, DeviceId=ROOT\SYSTEM\0002
                    //PhyDevNo=2, DevInst=4, DeviceId=PCIIDE\IDECHANNEL\4&amp;amp;1010A736&amp;amp;0&amp;amp;1
                    //PhyDevNo=4, DevInst=5, DeviceId=USB\VID_05E3&amp;amp;PID_0751\5&amp;amp;4F9223B&amp;amp;0&amp;amp;8
            #endif
&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPhysicalDeviceNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDIDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevicePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PhyDevNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;hDevInfoRslt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPDD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevInst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nl&quot;&gt;ProcExit:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INVALID_HANDLE_VALUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SetupDiDestroyDeviceInfoList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hDevInfo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hDevInfoRslt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;



&lt;span class=&quot;c1&quot;&gt;//----------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//      주어진 드라이브를 '꺼내기' 처리함&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//----------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WINAPI&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EjectDrive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rslt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevEjtRslt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEVINST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevInst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PNP_VETO_TYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VetoType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PNP_VetoTypeUnknown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;WCHAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VetoNameW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAX_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DEVINST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevInstParent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;VetoNameW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevInst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDrivesDevInst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DriveLetter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ProcExit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;CM_Get_Parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevInstParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevInst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//드라이브의 부모를 얻음, (예: USB 브리지, SATA 포트, 두 개의 드라이브가있는 IDE 채널)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//안되면 3번 재시도 해봄&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//CM_Query_And_Remove_SubTree() 제한된 사용자에게는 동작안함&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//CM_Query_And_Remove_SubTreeW(DevInstParent, &amp;amp;VetoType, VetoNameW, MAX_PATH, CM_REMOVE_NO_RESTART); //CM_Query_And_Remove_SubTreeA()는 W2000에서는 구현되지 않음&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//CM_Query_And_Remove_SubTreeW(DevInstParent, NULL, NULL, 0, CM_REMOVE_NO_RESTART); //메세지박스(W2K, Vista)나 말풍선(XP)이 뜸&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//CM_Request_Device_EjectW(DevInstParent, NULL, NULL, 0, 0);                        //메세지박스(W2K, Vista)나 말풍선(XP)이 뜸&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevEjtRslt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CM_Request_Device_EjectW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DevInstParent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VetoType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VetoNameW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MAX_PATH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CR_SUCCESS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;VetoType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PNP_VetoTypeUnknown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rslt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;Sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;//다음 시도에 기회를 주어야 함&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Retry...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rslt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;VetoName=%ws&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VetoNameW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CM_Request_Device_EjectW() Result=%Xh&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DevEjtRslt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nl&quot;&gt;ProcExit:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rslt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;




&lt;span class=&quot;c1&quot;&gt;//-----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//      USB 스토리지 '꺼내기' 처리&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//-----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EjectDrive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'H'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//꺼내기할 드라이브 레터를 주면됨&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Success&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Failed&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>타스 (TARS-C)</name></author><category term="WINAPI" /><category term="USB" /><category term="Eject" /><category term="Drive" /><summary type="html">[WINAPI][CODE] USB 꺼내기 처리</summary></entry><entry><title type="html">[MFC] 해당 키가 눌러져 있는지 확인하기</title><link href="https://tars-c.github.io/2020-05-14/press-key" rel="alternate" type="text/html" title="[MFC] 해당 키가 눌러져 있는지 확인하기" /><published>2020-05-14T00:00:00+09:00</published><updated>2020-05-14T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-14/GetKeyState:%20%ED%95%B4%EB%8B%B9%20%ED%82%A4%EA%B0%80%20%EB%88%8C%EB%9F%AC%EC%A0%B8%20%EC%9E%88%EB%8A%94%EC%A7%80%20%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0</id><content type="html" xml:base="https://tars-c.github.io/2020-05-14/press-key">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;사용자는 어떤 키를 누를지 모르는 야생마와 비슷하다.&lt;br /&gt;
개발자는 프로그램을 개발하면서 사용자가 특정 키를 누른지를 구해야할 때가 있다.&lt;/p&gt;

&lt;p&gt;해당 키가 눌러져 있는지에 대해 확인하는 함수에 대해 알아본다.&lt;br /&gt;
이때 사용되는 키코드는 Virtual Key Code 이다.&lt;br /&gt;
Virtual Key Code 목록은 다음 링크에서 볼 수 있다.&lt;br /&gt;
&lt;a href=&quot;https://docs.microsoft.com/ko-kr/windows/win32/inputdev/virtual-key-codes&quot; target=&quot;_blank&quot;&gt;LINK: MSDN Virtual Key Code List&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;getkeystate-함수-알아보기&quot;&gt;GetKeyState() 함수 알아보기&lt;/h2&gt;
&lt;p&gt;인자로는 int 타입의 Virtual Key Code를 요구하고 있다.&lt;br /&gt;
반환 타입은 SHORT(16bit, 2Byte) 타입이다.&lt;br /&gt;
2BYTE를 각각 쪼개거나 비트 연산을 통해 정보를 가져와 사용한다.&lt;/p&gt;

&lt;p&gt;반환 데이터에서 high-order bit가 1이면 해당 키를 누른 상태이며 그 외는 땐 상태를 의미한다.&lt;br /&gt;
low-order bit가 1이면 키가 토글된 상태를 의미한다. 그 외는 토글되지 않은 상태를 의미한다.&lt;/p&gt;

&lt;p&gt;토글된 상태 값은 토글키(Toggle Key) 에만 적용되는 속성이다.&lt;br /&gt;
키보드에서 토글키를 누르면 오른쪽 상단의 키보드에 불이 들어오고(1) 다시 누르면 꺼진다(0)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Windows 토글키는 대표적으로 3가지가 존재한다.
    &lt;ul&gt;
      &lt;li&gt;Caps Lock&lt;/li&gt;
      &lt;li&gt;Num Lock&lt;/li&gt;
      &lt;li&gt;Scroll Lock&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getasynckeystate-함수-알아보기&quot;&gt;GetAsyncKeyState() 함수 알아보기&lt;/h2&gt;
&lt;p&gt;이 함수는 비동기이므로 GetKeyState() 함수보다 빠르게 작동한다.&lt;br /&gt;
인자로는 int 타입의 Virtual Key Code를 요구하고 있다.&lt;br /&gt;
반환 타입은 SHORT(16bit, 2Byte) 타입이다.&lt;br /&gt;
위 GetKeyState() 함수와 동일하게 사용방법이 같다.&lt;br /&gt;
토글키에 대한 속성은 구할 수 없다.&lt;/p&gt;

&lt;p&gt;이 함수는 현재 키가 눌렸는지에 대해서만 구할 수 있다.&lt;br /&gt;
또 low order bit를 이용해서 마지막으로 키가 눌렸는지에 대해서도&lt;br /&gt;
구할 수 있었지만 x86 환경에서는 구할 수 없었다.&lt;br /&gt;
혹시 몰라 직접 테스트를 진행해보았으나 프로그램 1개로는 low order bit 값을 확인할 수 없었다.&lt;br /&gt;
아마 16비트 호환성을 위해 low order bit를 유지하고 있는 것 같다 (MSDN)&lt;/p&gt;

&lt;p&gt;high order bit는 키가 눌렀는 지에 대한 상태를 의미하며 아래처럼 사용한다.
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;누른-상태-확인하기&quot;&gt;누른 상태 확인하기&lt;/h2&gt;
&lt;p&gt;키를 누르고 있는지 알기 위해 high order bit와 비트 연산을 진행한다.&lt;/p&gt;

&lt;p&gt;16bit 데이터에서 high order bit, low order bit는 다음과 같다.&lt;br /&gt;
high order bit는 1000 0000 0000 0000 을 의미하고 16진수로는 0x8000 이다.&lt;br /&gt;
low   order bit는 0000 0000 0000 0001 을 의미하고 16진수로는 0x1 이다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetKeyState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'A'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x8000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// key down code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// VK_CAPITAL = Caps Lock&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetKeyState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VK_CAPITAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// toggle on code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// toggle off code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;‘a’ 를 매개변수로 입력하면 정상적으로 작동하지 않는다.&lt;br /&gt;
‘a’ 는 virtual key code 목록에 존재하지 않기 때문이다. ‘A’ 를 사용하자&lt;br /&gt;
virtual key code는 소문자 아스키를 지원하지 않는다는 것을 명심하자.&lt;/p&gt;

&lt;p&gt;a 키를 누르면 정상적으로 키가 눌린지 감지가 된다.&lt;br /&gt;
Ctrl, Shift 등 다른 키를 누른 상태에서 a 키를 누르면 감지가 되지 않는 점이 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;글 다썻다아 ~&lt;/strong&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="가상키" /><category term="VK" /><category term="VirtualKey" /><category term="GetKeyState" /><category term="GetAsyncKeyState()" /><category term="상위비트" /><category term="high-order" /><category term="하위비트" /><category term="low-order" /><category term="토글키" /><category term="ToggleKey" /><summary type="html">[MFC] 해당 키가 눌러져 있는지 확인하기</summary></entry><entry><title type="html">[MFC] Form에서 OnChar, OnKeyDown 핸들러 호출이 안 될 시 해결방법</title><link href="https://tars-c.github.io/2020-05-13/form-onchar-onkeydown-issue" rel="alternate" type="text/html" title="[MFC] Form에서 OnChar, OnKeyDown 핸들러 호출이 안 될 시 해결방법" /><published>2020-05-13T00:00:00+09:00</published><updated>2020-05-13T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-13/CFormView%20OnChar%20OnKeyDown</id><content type="html" xml:base="https://tars-c.github.io/2020-05-13/form-onchar-onkeydown-issue">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;SDI 프로젝트와 다르게&lt;br /&gt;
컨트롤이 있는 Dialog, FormView에선 OnChar, OnKeyDown 핸들러가 호출되지 않는 현상이 발생한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;핸들러가 호출이 되지 않은 원인은&lt;br /&gt;
사용자가 키를 눌러 메시지를 발생하면 Form 안에 포커스를 가지고 있는 컨트롤이 메시지를 처리한다.&lt;/p&gt;

&lt;p&gt;디버거를 돌려보면 알 수 있듯이 View, Dialog는 메시지를 받지 못하고 처리도 못한다.&lt;br /&gt;
결국에 WM_CHAR, WM_KEYDOWN 메시지는 Form 안에 있는 컨트롤이 보내고 처리한다.&lt;/p&gt;

&lt;p&gt;만약 Form, Dialog, View에 버튼처럼 포커스를 줄 수 있는 컨트롤을 제거하면&lt;br /&gt;
정상적으로 뷰에서도 OnChar, OnKeyDown 핸들러가 호출된다.&lt;/p&gt;

&lt;p&gt;호출 흐름을 적어보면&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;사용자가 키를 누름&lt;/li&gt;
  &lt;li&gt;(WM_KEYDOWN, WM_CHAR) 메시지 큐에 들어감&lt;/li&gt;
  &lt;li&gt;메시지 루프 돌며 처리 대기중&lt;/li&gt;
  &lt;li&gt;컨트롤 PreTranslateMessage 호출됨&lt;/li&gt;
  &lt;li&gt;View PreTranslateMessage 호출됨&lt;/li&gt;
  &lt;li&gt;(메시지를 가로채어 뷰에게 보내주자)&lt;/li&gt;
  &lt;li&gt;메시지 루프가 메시지큐에서 꺼내 메시지 처리&lt;/li&gt;
  &lt;li&gt;OnKeyDown(), OnChar() 핸들러 호출됨&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;해결-방법&quot;&gt;해결 방법&lt;/h2&gt;
&lt;p&gt;뷰 대신에 포커스를 가진 컨트롤이 메시지를 처리하고 있다.&lt;br /&gt;
메시지 큐에서 메시지를 꺼내기 전(PreTranslateMessage)에 메시지 정보를 얻어 &lt;br /&gt;
SendMessage 함수를 이용해 뷰에 메시지를 보내어 강제로 핸들러를 호출할 수 있다.&lt;/p&gt;

&lt;p&gt;OnKeyDown(), OnChar() 직접적으로 함수 호출은 잘못된 방식이므로 지양해야한다.&lt;/p&gt;
&lt;figcaption&gt;CTEView.cpp&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CTEView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreTranslateMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MSG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// TODO: 여기에 특수화된 코드를 추가 및/또는 기본 클래스를 호출합니다.&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WM_KEYDOWN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSafeHwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WM_CHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SendMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSafeHwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFormView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PreTranslateMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pMsg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;PreTranslateMessage() 함수의 반환값은 계속 메시지를 처리할 것인지에 대해 결정한다.&lt;/p&gt;

&lt;p&gt;TRUE이면 더 이상 해당 메시지를 처리하지 않는다는 의미이고&lt;br /&gt;
FALSE이면 해당 메시지를 계속 처리한다는 의미이다.&lt;/p&gt;

&lt;p&gt;TRUE 반환 예시를 들어보겠다.&lt;br /&gt;
CButton::PreTranslateMessage() 함수에서 TRUE를 반환하면 그냥 끝이 나버린다.&lt;br /&gt;
다음으로 진행되는 PreTranslateMessage() 함수 및 메시지 핸들러는 호출되지 않는다.&lt;/p&gt;

&lt;p&gt;그럼 반대로 FALSE 반환 예시를 들어보겠다.&lt;br /&gt;
Button::PreTranslateMessage() 함수에서 FALSE를 반환하고&lt;br /&gt;
부모인 TEView::PreTranslateMessage 에서 처리하고 또 FALSE 반환할 시에&lt;br /&gt;
메시지 핸들러까지 호출된다. 만약 첫단계에서는 FALSE를 반환, 두번째에선 TRUE를 반환하면&lt;br /&gt;
해당 메시지 핸들러는 호출되지 않는다.&lt;/p&gt;

&lt;p&gt;PreTranslateMessage() 함수 인자로는 MSG 타입이 넘어온다.&lt;br /&gt;
넘어온 pMSg 구조체는 메시지 관련 정보들을 가지고 있다.&lt;br /&gt;
가지고 있는 정보는 어느 핸들(hwnd)에서 무슨 메시지(message)를 보낸지 알 수 있고&lt;br /&gt;
메시지가 가진 정보(WPARAM, LPARAM)를 이용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;글 다썻다아 ~&lt;/strong&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="다이얼로그" /><category term="Dialog" /><category term="폼뷰" /><category term="CFormView" /><category term="OnChar" /><category term="OnKeyDown" /><category term="PreTranslateMessage" /><category term="핸들러" /><category term="handler" /><summary type="html">[MFC] Form에서 OnChar, OnKeyDown 핸들러 호출이 안 될 시 해결방법</summary></entry><entry><title type="html">[MFC] SDI 프로젝트 Dialog Based 처럼 사용하기</title><link href="https://tars-c.github.io/2020-05-12/sdi-formview" rel="alternate" type="text/html" title="[MFC] SDI 프로젝트 Dialog Based 처럼 사용하기" /><published>2020-05-12T00:00:00+09:00</published><updated>2020-05-12T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-12/SDI%20%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%20Dialog%20Based%20%EC%B2%98%EB%9F%BC%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0</id><content type="html" xml:base="https://tars-c.github.io/2020-05-12/sdi-formview">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;SDI 프로젝트는 기본적으로 만들면 CView 클래스를 상속받아 만들어지기 때문에&lt;br /&gt;
리소스뷰 비주얼 에디터를 이용하여 컨트롤 생성 및 배치할 수 없다.&lt;br /&gt;
CView를 상속받은 경우 동적으로 컨트롤을 생성 및 배치해야한다.&lt;/p&gt;

&lt;p&gt;CView와 다르게 CFormView 클래스를 상속받은 경우&lt;br /&gt;
Dialog를 이용한 컨트롤 생성 및 배치가 가능한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번 글에선 CFormView가 간단히 알아보고&lt;br /&gt;
프로젝트를 생성할 때 CFormView를 상속받아 생성하는 법을 알아본다.&lt;br /&gt;
추가로 CView를 상속받은 View를 CFormView로 상속받은 View로 바꾸는 작업도 진행한다.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cformview란-&quot;&gt;CFormView란 ?&lt;/h2&gt;
&lt;p&gt;대화상자 리소스를 이용해 컨트롤을 배치할 수 있는 뷰이다.&lt;br /&gt;
폼 기반의 MFC를 이용한 프로그램을 개발할 때 가장 기본이 되는 뷰이다.&lt;br /&gt;
CSCrollView의 파생 클래스이며 스크롤 기능을 지원한다.&lt;br /&gt;
CFormView를 이용하면 개발자가 양식을 만들어 다른 뷰에도 붙일 수 있다.&lt;/p&gt;

&lt;p&gt;다이얼로그와 연결이 되어 비주얼에디터를 사용할 수 있으므로 생산성에도 영향을 준다.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cformview를-상속받는-view-프로젝트-만들기&quot;&gt;CFormView를 상속받는 View 프로젝트 만들기&lt;/h2&gt;
&lt;p&gt;MFC 프로젝트를 만들 때 기본적으로 CView를 상속받는다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;다음 그림과 같이 기반 클래스를 CFormView를 변경하면
프로젝트를 생성 시 CFormView를 상속받는 View가 만들어진다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;생각보다 너무 단순해서 놀랐다.&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/CFormView/create_formview.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cview를-상속받은-view를-cformview로-상속받는-view로-변경하기&quot;&gt;CView를 상속받은 View를 CFormView로 상속받는 View로 변경하기&lt;/h2&gt;
&lt;p&gt;솔루션 이름을 “ TE “ 로 프로젝트를 CView를 상속받은 프로젝트를 만든다. (Test 줄임말)&lt;br /&gt;
Visual Studio 2017 기준으로 작성되었으며 버전이 다를 경우 올바르게 작동하지 않을 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;TEView.h 를 엽니다.&lt;/li&gt;
  &lt;li&gt;CView를 CFormView로 Rename(Ctrl+R+R) 합니다. (미리보기 -&amp;gt; 적용)&lt;/li&gt;
  &lt;li&gt;리소스뷰로 가서 Dialog 삽입 및 ID를 지정합니다. (IDD_TE)&lt;/li&gt;
  &lt;li&gt;창을 눌러 다음과 같이 속성을 변경합니다.
    &lt;ul&gt;
      &lt;li&gt;속성 Style: Popup -&amp;gt; Child&lt;/li&gt;
      &lt;li&gt;속성 System Menu: True -&amp;gt; False&lt;/li&gt;
      &lt;li&gt;속성 Title Bar: True -&amp;gt; False&lt;/li&gt;
      &lt;li&gt;속성 Border: Dialog Frame -&amp;gt; None&lt;/li&gt;
      &lt;li&gt;(요약 - ON: WS_CHILD / OFF:WS_POPUP, WS_SYSMENU, WS_BORDER)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TEView.h 파일을 열어 TEView 클래스 public 멤버변수로 선언합니다.
    &lt;ul&gt;
      &lt;li&gt;enum { IDD = IDD_TE };&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TEView.cpp 디폴트 생성자 정의부에 멤버이니셜라이저로 CFormView 생성자를 호출한다.
    &lt;ul&gt;
      &lt;li&gt;생성자 호출 시 필요한 매개변수는 Dialog ID 입니다.&lt;/li&gt;
      &lt;li&gt;: CFormView(IDD_TE)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;TEView.cpp 클래스 마법사를 이용해 OnInitialUpdate() 가상함수를 재정의한다.&lt;/li&gt;
  &lt;li&gt;아래 두 함수를 사용해서 뷰의 크기를 프레임과 맞추고 빌드를 한다.(딘축키: F7)
    &lt;ol&gt;
      &lt;li&gt;GetParentFrame()-&amp;gt;RecalcLayout();&lt;/li&gt;
      &lt;li&gt;ResizeParentToFit();&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;결과:&lt;br /&gt;
&lt;img src=&quot;/assets/images/CFormView/result_formview.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;메뉴-및-툴바-삭제하기&quot;&gt;메뉴 및 툴바 삭제하기&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;툴바를 삭제하고 싶다면 다음과 같이 진행한다.
    &lt;ul&gt;
      &lt;li&gt;CMainFrame::OnCreate() 에서 m_wndToolBar 관련 코드를 주석처리한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;상단 메뉴를 삭제하고 싶다면 다음과 같이 진행한다.
    &lt;ul&gt;
      &lt;li&gt;CTEApp::InitInstance() 창 초기화 작업란에 m_pMainWnd-&amp;gt;SetMenu(NULL); 코드를 삽입한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;글 다 썻다아 ~&lt;/strong&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="SDI" /><category term="프로젝트" /><category term="다이얼로그" /><category term="Dialog" /><category term="폼뷰" /><category term="FormvView" /><category term="툴바" /><category term="Toolbar" /><category term="메뉴" /><category term="Menu" /><category term="삭제하기" /><category term="Destroy" /><summary type="html">[MFC] SDI 프로젝트 Dialog Based 처럼 사용하기</summary></entry><entry><title type="html">[MFC][실습] Document CArchive 비트맵 파일 직렬화</title><link href="https://tars-c.github.io/2020-05-11/implicit-serialize" rel="alternate" type="text/html" title="[MFC][실습] Document CArchive 비트맵 파일 직렬화" /><published>2020-05-11T00:00:00+09:00</published><updated>2020-05-11T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-11/Document%20CArchive%20%EB%B9%84%ED%8A%B8%EB%A7%B5%20%EC%A7%81%EB%A0%AC%ED%99%94</id><content type="html" xml:base="https://tars-c.github.io/2020-05-11/implicit-serialize">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;이 글은 stackoverflow, MSDN 을 참고하여 작성되었습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이번 글에서는 비트맵 파일 직렬화를 실습한다.&lt;br /&gt;
국내 개발 블로그를 보면 대부분 기본자료형 위주로 포스팅되어 있다.&lt;br /&gt;
너무 기초만 다루는 것 같았다. &lt;strong&gt;&lt;del&gt;(내 코드도 기초수준이다)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
네트워크 프로그래밍에서 사용되는 직렬화는 더 공부를 하고 다음에 실습하도록 한다.&lt;/p&gt;

&lt;p&gt;명시적(implicit)으로 직렬화 하는 방법에 대해 알아본다.&lt;br /&gt;
암시적이나 명시적이나 모두 비슷하니&lt;br /&gt;
자세한 설명은 이전 글을 참고하도록 하자.&lt;br /&gt;
&lt;a href=&quot;/2020/05/09/explict-serialize.html/&quot; target=&quot;_blank&quot;&gt;이전 글: Document CArchive 기본타입 및 객체 직렬화&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;명시적 직렬화도 암시적이랑 비슷하게 CFile 객체를 CArchive 객체가 참조하여 사용한다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;CFile 객체를 CArchive 객체가 참조하게 될 때 모드를 정할 수 있다.&lt;/li&gt;
  &lt;li&gt;CArchive::store (저장)&lt;/li&gt;
  &lt;li&gt;CArchive::load (불러오기)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;비트맵의-직렬화&quot;&gt;비트맵의 직렬화&lt;/h2&gt;
&lt;p&gt;아래 코드를 설명해보면&lt;br /&gt;
힙 메모리를 할당하여 이미지 객체와 스트림을 만들고(연결) 메모리에 저장한다.&lt;br /&gt;
CreateStreamOnHGlobal() API 함수를 이용하여 메모리에 스트림을 만든다.&lt;br /&gt;
CImage 클래스에서 제공하는 Save() 함수를 이용해 스트림에 데이터를 저장한다.&lt;/p&gt;

&lt;p&gt;데이터가 저장된 힙 메모리에 함수를 이용해 포인터와 메모리 크기를 구하고&lt;br /&gt;
구한 포인터 위치에서 파일의 크기만큼 CArchive 객체를 이용해 직렬화하여 파일을 저장하는 것이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;MSDN을 보면 전역(Global) 메모리는 과거에 사용되어졌다고 한다.&lt;br /&gt;
x86 이후의 시스템에서는 16비트 프로그램을 포팅하거나&lt;br /&gt;
16비트 Windows프로그램의 소스코드 호환성 때문에 지원된다고 한다.
&lt;strong&gt;&lt;del&gt;(도대체 언제적 것인지..)&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;GlobalAlloc() 함수는 결국에 디폴트 힙을 할당하는 함수의 래퍼함수로 구현되어 있다고 한다.&lt;br /&gt;
이로 인해 오버헤드가 발생한다는 경고문도 적혀있다.&lt;br /&gt;
x86 환경에선 과거 세그먼트 메모리 구조에서 가상 메모리를 사용 구조로 바뀌었다.&lt;/p&gt;

&lt;p&gt;GMEM_MOVEABLE은 이동이 가능한 메모리를 할당하지만&lt;br /&gt;
메모리는 프로세스 영역 내(힙 영역 내)에서만 움직일 수 있다고 한다.&lt;br /&gt;
반대로 고정된 메모리는 GMEM_FIXED를 이용한다.&lt;br /&gt;
메모리 이동은 힙 메모리 단편화와 연관이 있다.&lt;br /&gt;
특별한 상황이 아니라면 기본적으로 이동이 가능한 메모리를 사용하도록 하자.&lt;br /&gt;
할당 메모리 크기가 0인 이유는 삭제가 가능한 메모리를 할당받기 위해서이다.&lt;/p&gt;

&lt;p&gt;누가 메모리를 왜 삭제하는지는 운영체제에 대한 이해가 필요할 것 같다..&lt;br /&gt;
구글에 아무리 검색해봐도 삭제 가능한(discard) 메모리를 사용하는 이유는 모르겠다.&lt;br /&gt;
일단 0으로 할당함으로 써 스트림에서 자유로운 크기를 만들 수 있다는 것은 확실하다.&lt;/p&gt;

&lt;p&gt;오버헤드가 적은 HeapCreate, HeapAlloc 할당한 함수를 이용해&lt;br /&gt;
스트림을 만들고 저장하면 좋은데 아직 실력이 부족하다..&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// m_image는 CImage타입의 이미지 데이터를 가지고 있는 멤버변수이다.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CFile&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CFileException&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Temp&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;MyBMP.BMP&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modeCreate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modeWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CArchive&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CArchive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;IStream&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HGLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hGloMem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GlobalAlloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GMEM_MOVEABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CreateStreamOnHGlobal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hGloMem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;m_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Gdiplus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ImageFormatBMP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LPVOID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pBmpData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GlobalLock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hGloMem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;size_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GlobalSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hGloMem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pBmpData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;archive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GlobalUnlock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hGloMem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;GlobalFree&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hGloMem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pStream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;GlobalLock() 함수로 메모리의 단편화에서의 이동을 제한하고&lt;br /&gt;
실제 메모리의 첫번쨰 위치를 얻어오는 것이다.&lt;/p&gt;

&lt;p&gt;반드시 리소스를 사용했으면 해제 및 반납하는 작업을 빼먹지 말자.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;이해는 충분히 한 것 같으니 마친다.&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;글 다썻다아 ~&lt;/strong&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="파일" /><category term="CFile" /><category term="비트맵" /><category term="bitmap" /><category term="직렬화" /><category term="serialize" /><category term="serialization" /><category term="CArchive" /><summary type="html">[MFC][실습] Document CArchive 비트맵 파일 직렬화</summary></entry><entry><title type="html">[잡담] 알고리즘 그리고 후회</title><link href="https://tars-c.github.io/2020-05-11/alogrithm-regret" rel="alternate" type="text/html" title="[잡담] 알고리즘 그리고 후회" /><published>2020-05-11T00:00:00+09:00</published><updated>2020-05-11T00:00:00+09:00</updated><id>https://tars-c.github.io/2020-05-11/PS,%20%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98,%20%EA%B7%B8%EB%A6%AC%EA%B3%A0%20%ED%9B%84%ED%9A%8C</id><content type="html" xml:base="https://tars-c.github.io/2020-05-11/alogrithm-regret">&lt;p&gt;2020년 알고리즘의 붐이 불었다.&lt;br /&gt;
사실 불고도 계속 불고 있다라는 표현이 맞는 것 같다.&lt;br /&gt;
아마 2018?년도부터 불지 않았나…&lt;/p&gt;

&lt;p&gt;4,5년 전만 해도 PS는 소수가 즐겨하는 놀이에 불과했다라고 생각했다.&lt;br /&gt;
그때 나도 알고리즘에 입문해서 열심히 공부할껄 그랬다. &lt;strong&gt;&lt;del&gt;(그땐 뭘했더라..)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
솔직히 지금와서 정말로 후회한다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;누군가 알고리즘을 포기하더라도 자료구조는 포기하지 말아야 한다는 것을 말해주고 싶다.&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;개발을 하면서 알고리즘은 땔래야 떌 수가 없다.&lt;br /&gt;
알고리즘은 간단히 말해 문제를 해결하는 능력이다.&lt;br /&gt;
250원에서 3명이서 30원씩 나누고 나머지로 몇명의 사람들이 더 나눌 수 있는가 ?&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;문제의 예시가 조금 허접하다… 이해바란다.&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
위 문제를 사칙연산 및 루트 복잡한 수학식을 이용해&lt;br /&gt;
아주 빠르고 최대한의 효율로 풀어내는 것이 솔빙이다(Problem Solving, PS)&lt;br /&gt;
문제해결, 솔빙(PS), 알고리즘 모두 비슷한 의미다.&lt;br /&gt;
효율을 매우 중요시하는 건 아니지만&lt;br /&gt;
문제에서 시간과 메모리(기억공간)을 제한하기에 효율은 따를래야 따를 수 밖에 없다.&lt;/p&gt;

&lt;p&gt;주말에 기초 알고리즘 문제를 풀면서 느낀건 나누기 곱하기를&lt;br /&gt;
복잡하게 만들면 조금 어렵게 느껴질 수도 있다는 것이다.&lt;br /&gt;
그림을 확대하거나 축소할 때에도 곱하기 나누기의 연산을 이용한다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(조금 어려웠었지만 재밌는 경험이었다)&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;커뮤니티에서 보면 알고리즘 문제 질문은 하루에도 수백번 올라온다.&lt;br /&gt;
매년이 지날 수록 머리 좋은 신입생들은 정말 치고 올라오고 있다.&lt;br /&gt;
나는 접근도 못하는 문제를 &lt;strong&gt;&lt;del&gt;어디선가 Copy &amp;amp; Paste한걸까?&lt;/del&gt;&lt;/strong&gt; 풀었다고 하고…&lt;br /&gt;
정말 문제의 해결을 설명할 수 있을정도로 머리가 좋은건지 의심도 든다.&lt;br /&gt;
반대로 문제를 빠르게 해결하는 그자의 능력이 대단하고 부럽기도한다.&lt;br /&gt;
정말 이 세상에 똑똑한 사람들은 많은 것 같다.&lt;/p&gt;

&lt;p&gt;실제로 구글에 알고리즘 문제의 제목을 쳐보면 여러 블로그들이 나온다.&lt;br /&gt;
어떤 블로그에는 해설이 포함되어 있는데 &lt;strong&gt;&lt;del&gt;또 다른 블로그에는 코드만 가득하다.&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;정말 이 많은 사람들이 이 어려운 문제를 풀었을까 라는 의문을 가지기도 한다.&lt;br /&gt;
내 머리로는 풀기도 힘든 문제, 고민을 짧게는 3시간~5시간 이상 고민하면서 풀어야할 문제들이&lt;br /&gt;
금방 금방 풀리는 느낌이 강하다.. 뭐가 진실인지는 아무도 알 수 없다.&lt;/p&gt;

&lt;p&gt;커뮤니티에서 사람들이 떠드는 내용만 봐도 경쟁력이 느껴질 수 밖에 없다.&lt;br /&gt;
개발이란 곳이 이런 곳이었나 .. 분명 처음엔 자신감 뿜뿜이었는데 약간 위축이되기도 한다.&lt;br /&gt;
알고리즘 부분이 남들보다 취약해서 그렇게 느끼는 것 같기도 하다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;데이터를 자유자제로 다룰 수준이면 되지 않는가 ?&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;처음엔 문제해결 능력을 키우고 그것을 응용하는 것이 중요한줄 알았다.&lt;br /&gt;
근데 깊게 들어가면 알고리즘 문제를 푸는 것도 경험이었다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;경험이 많은 사람이 문제도 잘 풀더라&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;처음부터 개발 좀 해본(간단한 프로그램좀 만들어 본) 개발자들이&lt;br /&gt;
BFS DFS, DP, 세그먼트 트리 이런 복잡한 문제를 쉽게 풀어내는 사람 거의 없다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;나도 원리를 깨우치는건 좋아한다.&lt;br /&gt;
이 함수가 어떤식으로 돌아가는지, 하나씩 분해하고 쪼개서 분석하는 걸 무척이나 좋아한다.&lt;/p&gt;

&lt;p&gt;근데 난.. 수학적인 능력이 조금은 떨어지지 않나 생각이든다.&lt;br /&gt;
능력부족은 결국에 알고리즘 문제를 해결하는 능력이 떨어지는 것에 영향을 끼치는 것 같다.&lt;/p&gt;

&lt;p&gt;사실 높은 등급의 개발자라면 수학을 떌래야 떌 수가 없다.&lt;br /&gt;
코드를 효율적으로 써야하니까…&lt;br /&gt;
주어진 상황에서 식을 자유롭게 만든다면 문제를 해결하고 푸는데는 분명 도움이 크게된다.&lt;/p&gt;

&lt;p&gt;대기업은 아니지만 현업에 20년 이상 근무중이신 분께 여쭤보았지만&lt;br /&gt;
알고리즘 문제를 단 1번도 푼적이 없다고 한다.&lt;br /&gt;
하지만 실제 현업에서에 나타나는 문제는 알고리즘보다 복잡하다고 한다.&lt;/p&gt;

&lt;p&gt;요즘은 대기업에 입사하기 위해서는 코딩테스트(즉, 알고리즘)는 필수다.&lt;br /&gt;
언제부터 개발자의 기준이 알고리즘 해결이 된지 모르겠다.&lt;/p&gt;

&lt;p&gt;나는 대기업갈 생각은 1도 없지만.. 그래도 알고리즘의 기초는 알아야하지 않을까?&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(경쟁자가 너무 많고 스펙도 월등한 사람들이 판을 쳐서 눈을 낮춘 것이다)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;요즘은 하드웨어 성능이 좋아져서 알고리즘이 쓸모가 없다라는 의견도 몇몇본다.&lt;br /&gt;
하지만 현실은 하드웨어가 좋아졌어도 성능을 중요시하는 개발 분야는 분명히 있다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(발빠르게 동작하는 서버, 벙렬프로그래밍)&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;어렵고 경험위주의 복잡한 알고리즘까지 많은 시간을 허비하진 않더라도 &lt;strong&gt;&lt;del&gt;(대회나갈거아니잖아)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
간단한 문제는 개발자만의 사고력으로 문제를 간단히 해결하는 능력은 있어야한다고 본다.&lt;/p&gt;

&lt;p&gt;커뮤니티를 보면 남들이 얼마나 성장하는지 눈에 보인다.&lt;br /&gt;
남들이 뭘 하든 나는 사과나무 한그루를 더 심을 것이다.&lt;br /&gt;
개발 분야에선 안좋게 표현한다면 뒤쳐진다고? 표현하기도 하는 것 같다.&lt;br /&gt;
하지만 나는 내가 공부하고 싶은 것을 공부하면서 한 우물만 깊게파는 사람이 될 것이다.&lt;br /&gt;
개발 언어는 도구에 불과하다. 도구는 이용할 뿐이라는 걸 명심해야한다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;다양한 언어 및 프레임워크를 사용하여 한가지 분야를 파도록 하자.&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
그래도 기본적인 사고력 성장을 위해 주말엔 기초 알고리즘은 공부하려고 한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이 글은 현업 경험이 없는 아마추어 개발자가 쓴 것이니 참고용으로 보기 바란다.&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="알고리즘" /><category term="Alogrithm" /><category term="솔빙" /><category term="PS" /><summary type="html">[잡담] 알고리즘 그리고 후회</summary></entry><entry><title type="html">[소개] Chromium 으로 재탄생한 Edge 살펴보기 (이미지)</title><link href="https://tars-c.github.io/2020/05/09/chromium-based-edge" rel="alternate" type="text/html" title="[소개] Chromium 으로 재탄생한 Edge 살펴보기 (이미지)" /><published>2020-05-09T00:00:00+09:00</published><updated>2020-05-09T00:00:00+09:00</updated><id>https://tars-c.github.io/2020/05/09/Chromium%20%EA%B8%B0%EB%B0%98%20Edge%EB%A5%BC%20%EC%82%B4%ED%8E%B4%EB%B3%B4%EC%9E%90</id><content type="html" xml:base="https://tars-c.github.io/2020/05/09/chromium-based-edge">&lt;p&gt;이 글은 타 블로그를 참고해서 작성한 글이 절대 아니고&lt;br /&gt;
정보가 없는 상태에서 직접 다운받으면서 써본 경험을 바탕으로으로 작성되었습니다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;신문물을 접한 느낌이랄까..&lt;/del&gt;&lt;/strong&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Fun/surprise.jpg&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;으아악!!&lt;/strong&gt;&lt;br /&gt;
산소호흡기를 땔 조짐이 보였던 MS Edge가 크로미움 기반으로 새롭게 변했다는 소식을 접했다.&lt;br /&gt;
출시 날짜를 찾아보니까… 2020년 01월 15일이다. &lt;strong&gt;&lt;del&gt;(포스팅이 좀 늦었네..)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;strong&gt;&lt;a href=&quot;https://www.microsoft.com/ko-kr/edge?form=MA13DE&amp;amp;OCID=MA13DE&quot; target=&quot;_blank&quot;&gt;LINK: (MicroSoft) Edge 다운로드 받기&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;구닥다리 Edge가 Chromium을 올라타서 새롭게 탄생했다.&lt;br /&gt;
추측이지만 Chromium 기반이라 업데이트도 자동으로 할 것 같다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;반드시 업데이트 기능을 비활성화 시키도록하자&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;주인장은 과거에 Chrome광이었다.&lt;br /&gt;
어느날 Chrome Update를 하다보니 Chrome이 너무 불편해졌다.&lt;br /&gt;
그리고 강제로 Update하는거 너무 싫어한다.&lt;br /&gt;
그 이후로 주인장은 Chrome을 쓰지 않는다.&lt;br /&gt;
Chrome &lt;strong&gt;최신버전 기능을 1도 모르니 이점 참고&lt;/strong&gt;바란다.&lt;br /&gt;
Chromium 기반으로 만들어진 Vivaldi를 사용하거나 Safari를 사용한다.&lt;br /&gt;
**&lt;del&gt;Chrome은 오래된 크롬 버전만 사용할 뿐이다.**&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;다운받아서 얼마나 좋은지 직접 느껴보자!&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Edge가 지원하는 플랫폼은 다음과 같다.
    &lt;ul&gt;
      &lt;li&gt;Windows 10&lt;/li&gt;
      &lt;li&gt;Windows 8.1&lt;/li&gt;
      &lt;li&gt;Windows 8&lt;/li&gt;
      &lt;li&gt;Windows 7&lt;/li&gt;
      &lt;li&gt;macOS&lt;/li&gt;
      &lt;li&gt;Android&lt;/li&gt;
      &lt;li&gt;
        &lt;h2 id=&quot;ios&quot;&gt;iOS&lt;/h2&gt;
        &lt;p&gt;&lt;strong&gt;&lt;del&gt;(지원 가능한 어마무시한 플랫폼들..)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
아쉽게도 리눅스는 지원하지 않는다.&lt;br /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;설치-화면&quot;&gt;설치 화면&lt;/h2&gt;
&lt;p&gt;깔끔한 설치화면이다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/install-1.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아이콘을 보니까 마이크로소프트 느낌이랑 조금 멀게 느껴졌다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(vscode, Visual Studio 느낌이 아닌데?)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
새로운 Edge 브라우저 아이콘을 보니까 태극 느낌도 나고 크롬 느낌도 나는 것 같고…&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/install-2.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;인스톨러가 인터넷으로 설치파일을 다운을 받은 후&lt;br /&gt;
백그라운드에서 설치를 진행한다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/install-3.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;설치가 완료 됬다.&lt;br /&gt;
설치 완료 후 작은 창 하나가 뜨는데 사용자에게 초기화 작업해주는 거랑 비슷하다.&lt;br /&gt;
넘기다 보면 마이크로소프트 계정 로그인으로 데이터를 동기화하여
사용자가 편리하게 사용할 수 있다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/start1.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/start2.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;기능-살펴보기&quot;&gt;기능 살펴보기&lt;/h2&gt;
&lt;p&gt;일단 메뉴 리스트를 눌러서 보면 크롬이랑 너무 흡사하다. &lt;strong&gt;&lt;del&gt;(Chromium 기반이니까 비슷할 수 밖에)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
기본 확대 비율은 125% 로 설정되어 있지만, 110% 사용을 추천한다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/menu_list.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;메모리-사용량-및-속도&quot;&gt;메모리 사용량 및 속도&lt;/h3&gt;
&lt;p&gt;소비되는 메모리를 보기 위해 구버전 크롬과 비교해보았다.&lt;br /&gt;
탭을 두개 사용하고 똑같은 사이트에 접속한 상황이다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Edge:&lt;/strong&gt; 102.6 MB&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/7-edge.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Chrome(구버전):&lt;/strong&gt; 125.2 MB&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/7-chrome.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
소비되는 메모리는 엣지가 더 가볍다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(크롬 구버전보다 가벼울 수도 있구나.. 마소 역시 소프트 강자 무섭다 ㄷㄷ)&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;크롬 구버전은 약간 버벅임이 있다. &lt;strong&gt;&lt;del&gt;(아마 구버전이라 속도면에서 떨어진게 아닐까)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
확실히 엣지를 사용하여 구글을 검색하거나 웹사이트를 서핑할 때 불편함을 못느꼈다.&lt;/p&gt;

&lt;p&gt;하드웨어 가속을 끄고 몇가지 검색도 해보면서 테스트를 다시 해보았다.&lt;br /&gt;
Edge 옵션에서 하드웨어 가속을 꺼도 빠른 느낌이 강했다. &lt;strong&gt;&lt;del&gt;(가상머신에서 돌리는건데 이렇게 빨라?)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
구버전 Chrome도 &lt;strong&gt;&lt;del&gt;빠르지만&lt;/del&gt;&lt;/strong&gt; 나라면 새로운 Edge가 우세한 느낌이 강했다.&lt;br /&gt;
메모리 사용량 부분은 탭 수가 적고 작업 시간이 짧은 상태로 확인했으므로 평가로는 부적합하니 참고만 하자.
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;즐겨찾기-북마크&quot;&gt;즐겨찾기 (북마크)&lt;/h3&gt;
&lt;p&gt;크롬이랑 비슷한 즐겨찾기다.&lt;br /&gt;
그냥 무난해보인다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/bookmark.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;편리한-설장창&quot;&gt;편리한 설장창&lt;/h3&gt;
&lt;p&gt;설정창을 보면 너무나 편리하게 잘 써놔있다.&lt;br /&gt;
자세한건 직접 다운로드를 받아서 살펴보기 바란다.&lt;br /&gt;
크롬 사파리 비발디를 써봤지만 그중에 가장 눈에 확 들어온다.&lt;br /&gt;
125% 확대된 상태에선 설정창 왼쪽 리스트가 안보이니 참고하자.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/option_main.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Edge/option_browser.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;가장 마음에 들었던건 웹사이트 추적기능을 잘설명해놨다.&lt;br /&gt;
검색 데이터를 지우는 것도 편리하다.
&lt;img src=&quot;/assets/images/Edge/website_trace.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
진짜 사용자를 고려해서 텍스트부터 위치까지 전부 다 세심하게 맞춰진 것 같아서 좋았다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;설정창에 비활성화 기능이 유독 많아보이는건 기분탓이겠지 ?&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;다운로드-목록&quot;&gt;다운로드 목록&lt;/h3&gt;
&lt;p&gt;다운로드된 목록을 봐도 사용자가 쉽게 알 수 있게&lt;br /&gt;
시간도 나오고 파일도 종류별로도 필터링 할 수 있다는 점이다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/download.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;방문-기록-history&quot;&gt;방문 기록 (History)&lt;/h3&gt;
&lt;p&gt;방문 기록을 &lt;code class=&quot;highlighter-rouge&quot;&gt;검색 기록&lt;/code&gt;이란 이름으로 제공한다.
필터링이 잘될 것 같이 UI가 세심하게 잘짜여졌다.
시간까지 나올 줄은 몰랐다.
&lt;img src=&quot;/assets/images/Edge/history.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;반면에 주인장이 사용하는 최신 Safari는…&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/history_safari.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(너무 형편없다)&lt;/del&gt;&lt;/strong&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;닫힌-탭-복원&quot;&gt;닫힌 탭 복원&lt;/h3&gt;
&lt;p&gt;닫힌 탭 복원 기능도 상당히 좋다.&lt;br /&gt;
Ctrl+Shift+T 단축키를 이용해서 방금 닫은 탭을 복원할 수 있고&lt;br /&gt;
메뉴 리스트 -&amp;gt; 검색 기록 에 가면&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(단축키 상태가.. 누르기는 불편하다)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/restore_tab.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;브라우저-데이터-가져오기&quot;&gt;브라우저 데이터 가져오기&lt;/h3&gt;
&lt;p&gt;브라우저 데이터 가져오는 기능이 있다.&lt;br /&gt;
크롬과 IE 브라우저에 있는 데이터를 가져올 수 있다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/load_data.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;앱-new&quot;&gt;앱 (New!)&lt;/h3&gt;
&lt;p&gt;앱 기능을 사용해보았다.&lt;br /&gt;
사이트 별로 앱으로 등록할 수 있다.&lt;br /&gt;
이미 등록된 사이트의 앱은 다시 등록할 수 없다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;윈도우즈 스토어에 있는 앱도 사용이 가능할텐데.. 스토어가 폐허라서 그냥 안쓴다.&lt;/del&gt;&lt;/strong&gt;
&lt;img src=&quot;/assets/images/Edge/App.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;사이트로 등록된 앱을 사용하면 주소창이 없는 작은 브라우저 창이 뜬다.&lt;br /&gt;
주소 창이 없어서 주소 입력은 불가능하다.&lt;br /&gt;
상단바에 번역기도 같이 쓸 수 있어서 나름 쓸모 있어보인다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/app_window.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 생각하기론 레퍼런스 문서를 자주 참고해야할 때 유용한 기능이라 생각한다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;(불필요한 리소스 사용은 최소화 하고 필요한 기능만 제공하는 그런 느낌이랄까..)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/app_split.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;등록된 앱은 윈도우즈10에서 아래 그림처럼 시작메뉴(?!)에 등록해서 사용할 수도 있다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/app_start_menu.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;확장-프로그램&quot;&gt;확장 프로그램&lt;/h3&gt;
&lt;p&gt;그냥 크롬에서 사용할 수 있는거 새로운 Edge에서도 사용할 수 있다.
&lt;img src=&quot;/assets/images/Edge/exten.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;브라우저-작업관리자&quot;&gt;브라우저 작업관리자&lt;/h3&gt;
&lt;p&gt;단축키는 Shift+ESC 이다.
탭이 많은 경우 일일히 탭별로 찾아서 끄는 거 진짜 불편했다.&lt;br /&gt;
크롬과 똑같이 브라우저 내 작업관리자를 지원했다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/taskmgr.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;번역&quot;&gt;번역&lt;/h3&gt;
&lt;p&gt;크롬과 비슷하게 구글이 아닌 빙번역 기능도 제공한다.&lt;br /&gt;
구글과 빙 두 번역간 약간의 차이가 있어 보이긴하다.&lt;br /&gt;
어느 것이 좋은지는 사용자의 선택이다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/translate.png&quot; alt=&quot;img1&quot; /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;다크모드&quot;&gt;다크모드&lt;/h3&gt;
&lt;p&gt;다크모드를 지원하는데 애플에서 말하는 갬성과 똑같이 타이틀바만 지원하고 있다.&lt;br /&gt;
(엣지에서 제공하는 다크모드는 해당 웹사이트에서 설정해야 적용됨)&lt;br /&gt;
제공하지 않아도 다크모드 사용을 원한다면 Chrome &lt;a href=&quot;https://chrome.google.com/webstore/detail/dark-reader-dark/kbbbldgkhcpkmmjbjelmkjkchibeklng&quot; target=&quot;_blank&quot;&gt;DarkReader 확장 프로그램&lt;/a&gt; 사용을 추천한다.&lt;br /&gt;
Edge에서 제공하는 다크모드 적용 사진은 이미 이 글에 있으므로 생략한다.&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;벤치마크&quot;&gt;벤치마크&lt;/h2&gt;
&lt;p&gt;JetStream에서 여러 브라우저를 평가한 결과이다.&lt;br /&gt;
우승자는 Edge, 다른 평가에서는 Chrome이 승리하기도 했다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;파이어폭스한테는 지지 않았다.&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
Edge가 크롬을 이기는 것으로 보아 제대로 탈바꿈한건 분명하다.&lt;br /&gt;
&lt;img src=&quot;/assets/images/Edge/stream-chrome.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/Edge/stream-edge.png&quot; alt=&quot;img1&quot; /&gt;&lt;br /&gt;
&lt;a href=&quot;https://venturebeat.com/2020/01/15/browser-benchmark-battle-january-2020-chrome-firefox-edge-brave/5/&quot; target=&quot;_blank&quot;&gt;브라우저 평가 사이트 보러가기 (이미지 출처)&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;결론&quot;&gt;결론&lt;/h2&gt;
&lt;p&gt;이 밖에도 많은 기능들이 있을 것 같지만 여기까지만 보도록하겠다.&lt;br /&gt;
전반적으로 Chromium 영향을 많이 받아서 크롬과 흡사하다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;새롭게 탈바꿈 하기전에 Edge 브라우저는 솔직히 &lt;strong&gt;&lt;del&gt;쓰레기&lt;/del&gt;&lt;/strong&gt;였다.&lt;br /&gt;
마소에 근무하고 계시는 천재 개발자팀이 힘을 합쳐 새생명을 불어넣어주셨다.&lt;br /&gt;
업데이트를 자주해서 크롬처럼 무거워지는 루트만 타지 않는다면 계속 쓰고싶다.&lt;/p&gt;

&lt;p&gt;확실히 크롬 기반의 엔진을 올라타니까 제대로 탈바꿈했다.&lt;br /&gt;
기능이 많아서 무거울 거라고 생각했지만 그렇게 무겁다는 느낌을 받지 못했다.&lt;br /&gt;
가상머신에서 돌리는데에도 빠르고 부드럽게 돌아간다.&lt;/p&gt;

&lt;p&gt;Chromium, Microsoft 이 두 단어가 값어치를 알 수 있다.&lt;br /&gt;
친구한테 엣지 새롭게 나왔으니 써보라고 추천은 하고 싶다. &lt;strong&gt;&lt;del&gt;(추천 못할 정도는 아니다)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
최신 버전 크롬 쓰시는 분들은 큰 메리트를 느끼지 못한다고 한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;평가: ★★★★☆&lt;/strong&gt;&lt;br /&gt;
5점 만점에 4점, 크롬이 별로라면 한번쯤 써볼만하다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;글 다썻다아 ~&lt;/strong&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="크롬" /><category term="Chrome" /><category term="크로미움" /><category term="Chromium" /><category term="엣지" /><category term="Edge" /><summary type="html">[소개] Chromium 으로 재탄생한 Edge 살펴보기 (이미지)</summary></entry><entry><title type="html">[MFC][실습] Document CArchive 기본타입 및 객체 직렬화</title><link href="https://tars-c.github.io/2020/05/09/explict-serialize" rel="alternate" type="text/html" title="[MFC][실습] Document CArchive 기본타입 및 객체 직렬화" /><published>2020-05-09T00:00:00+09:00</published><updated>2020-05-09T00:00:00+09:00</updated><id>https://tars-c.github.io/2020/05/09/Document%20CAcrchive%20%EA%B8%B0%EB%B3%B8%ED%83%80%EC%9E%85%20%ED%81%B4%EB%9E%98%EC%8A%A4%20%EC%A7%81%EB%A0%AC%ED%99%94</id><content type="html" xml:base="https://tars-c.github.io/2020/05/09/explict-serialize">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;실습은 Doc 클래스 가상함수인 Serialize() 및 MyData 클래스 구현부만 개발한다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;데이터를 직렬화 하기 위해서는 CObject 클래스를 상속받거나&lt;br /&gt;
또는 CObject를 상속받은 자식 및 자손 클래스를 상속받으면 된다. (예: CBitmap, CButton 등)&lt;br /&gt;
(COjbect 클래스를 상속받는 이유는 Serialize() 가상함수 재정의를 위해서이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MFC에서 직렬화를 하는 방법이 대표적으로 2가지가 존재한다.
    &lt;ul&gt;
      &lt;li&gt;툴바에서 Open, Save 버튼을 이용한 방법 (CArchive 암시적 생성)&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;/2020-05-11/implicit-serialize&quot; target=&quot;_blank&quot;&gt;CFile, CArchive 객체를 이용한 방법 (CArchive 명시적 생성)&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;겉으로 보면 달라 보이지만 둘다 비슷하다고 생각하면 된다.&lt;/p&gt;

&lt;p&gt;CArchive를 암시적으로 생성하는 원리는 간단하다.&lt;br /&gt;
사용자가 다른 이름으로 저장 또는 저장을 누르면 사용자가 선택한 파일을에 대해&lt;br /&gt;
내부적으로 CFile객체를 만들고 CArchive 객체는 파일을 참조하여 만들어진다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;도큐먼트(Doc)에서 Serialize() 함수를 호출하여 CArchive 객체에 전달한다.&lt;br /&gt;
직렬화 할 때 CArchive 객체에 데이터를 전달하고 버퍼가 가득찬 경우 파일 Write를 시작한다.&lt;br /&gt;
원시 타입이 아닌 Object 타입인 경우 따로 직렬화를 구현하여 Serialize() 함수를 호출한다.&lt;/p&gt;

&lt;h2 id=&quot;객체의-직렬화-매크로-함수&quot;&gt;객체의 직렬화: 매크로 함수&lt;/h2&gt;
&lt;p&gt;매크로 함수는 2가지다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DECLARE_SERIAL(Class)
    &lt;ul&gt;
      &lt;li&gt;매크로 함수는 직려화할 클래스 헤더(*.h)에 적는다.&lt;/li&gt;
      &lt;li&gt;클래스 정보를 요구한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;IMPLMENT_SERIAL(Class, BaseClass, )
    &lt;ul&gt;
      &lt;li&gt;직렬화를 구현할 클래스(Serialize 함수가 재정의된) 구현부(*.cpp)에 적는다.&lt;/li&gt;
      &lt;li&gt;클래스 정보를 요구한다.&lt;/li&gt;
      &lt;li&gt;데이터 검증을 위한 스키마 넘버를 요구한다. (0의 수 이상 사용)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;매크로 함수는 직렬화 클래스를 명시할 뿐 사용하지 않는다고해서 직렬화가 불가능하다는 의미는 아니다.&lt;br /&gt;
개발 프로젝트가 커지면서 외부 컴퓨터 및 시스템을 사용할 때 데이터를 가져오거나 교환 시&lt;br /&gt;
스키마 넘버는 직렬화 데이터가 클래스에 해당하는 데이터가 일치하는지 검증을 하기 위해 사용된다.&lt;br /&gt;
읽어들인 데이터의 스키마 넘버와 현재 메모리에 있는 스키마 넘버가 다른 경우 CAcriveException을 발생시킨다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;스키마 넘버라고해서 SQL 데이터베이스 스키마 넘버와 혼동하지말자&lt;/del&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;객체의-직렬화-사용할-함수&quot;&gt;객체의 직렬화: 사용할 함수&lt;/h2&gt;
&lt;p&gt;CObject* 타입의 데이터 및 원시타입(Primitive)의 데이터만 «, » 연산자를 사용하도록 한다.&lt;br /&gt;
사용자 정의 타입의 객체 데이터를 저장하고 불러올 때에는 Write(), Read() 함수를 사용한다.&lt;br /&gt;
MBCS 및 유니코드 환경의 문자열을 저장 및 불러올 땐 WriteString(), ReadString() 함수를 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;객체의-직렬화-실습&quot;&gt;객체의 직렬화: 실습&lt;/h2&gt;

&lt;h3 id=&quot;헤더-및-구현-코드&quot;&gt;헤더 및 구현 코드&lt;/h3&gt;

&lt;figcaption&gt;MyClass.h&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CObject&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DECLARE_SERIAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ABCDEFG&quot;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;COLORREF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CArchive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 기타 코드 생략&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figcaption&gt;MyClass.cpp&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;IMPLEMENT_SERIAL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RGB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MyData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CArchive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsStoring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// storing code&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;// loading code&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_num2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 기타코드 생략&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figcaption&gt;CNormalSerializeDoc.h&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;#include &quot;MyData.h&quot;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CNormalSerializeDoc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CDocument&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;public:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;MyData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 기타코드 생략&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figcaption&gt;CNormalSerializeDoc.cpp&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CNormalSerializeDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CArchive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;m_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IsStoring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// TODO: 여기에 저장 코드를 추가합니다.&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// TODO: 여기에 로딩 코드를 추가합니다.&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;UpdateAllViews&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;설명-및-결과&quot;&gt;설명 및 결과&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;위에 선언된 변수값
    &lt;ul&gt;
      &lt;li&gt;직렬화 스키마 번호: 9&lt;/li&gt;
      &lt;li&gt;m_num1: -1 -&amp;gt; 3&lt;/li&gt;
      &lt;li&gt;m_num2: -1 -&amp;gt; 7&lt;/li&gt;
      &lt;li&gt;m_dnum1: 0.0 -&amp;gt; 3.0&lt;/li&gt;
      &lt;li&gt;text[10]: “abcdefghijk”&lt;/li&gt;
      &lt;li&gt;color: RGB(255, 255, 15)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;m_data 에서 원시타입으로 접근하여 하나씩 직렬화한 것이다. 너무 쉽고 간단하다.&lt;br /&gt;
도큐먼트 Serialize() 함수에서는 간단히 해당 객체가 가진 시리얼라이즈 함수를 호출한다.&lt;br /&gt;
핵심은 해당 오브젝트의 Serialize() 함수를 재정의하여 구현한다.&lt;br /&gt;
주의할 점은 부모 클래스의 CObject::Serialize() 함수를 먼저 호출해주는 것이다.&lt;br /&gt;
불러오기를 테스트할 땐 값을 확인하기 위해 기본값을 임시로 바꾼다.&lt;br /&gt;
저장 및 불러오기를 테스트하자!&lt;br /&gt;
&lt;img src=&quot;/assets/images/Serialize/messagebox.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;직렬화를 마치면 22Byte 크기를 가진 파일이 생긴다.&lt;br /&gt;
자세한건 아래 그림을 참고하자 &lt;strong&gt;&lt;del&gt;만들기 진짜 힘들었다&lt;/del&gt;&lt;/strong&gt;
데이터가 저장된 파일의 크기는 직렬화된 멤버변수 타입의 크기가 모두 더해져서 만들어진다.&lt;br /&gt;
Hex Viewer로 파일을 살펴보면 저장한 데이터들이 16진수로 저장되어 들어가져있다.&lt;br /&gt;
&lt;strong&gt;&lt;del&gt;16진수는 컴퓨터 공부를 하면 할 수록 반드시 알아야할 녀석이라는 걸 깨닫게 된다.)&lt;/del&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;img src=&quot;/assets/images/Serialize/hex_viewer.png&quot; alt=&quot;img2&quot; /&gt;&lt;br /&gt;
값이 잘 불러와진다. OK!&lt;/p&gt;

&lt;h2 id=&quot;확장명-필터-저장-및-불러오기&quot;&gt;확장명 필터 (저장 및 불러오기)&lt;/h2&gt;
&lt;p&gt;특정 확장명을 가진 파일에 대해서 저장 및 불러오기에 대해 알아보자&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;CArchive 객체는 CFile 객체를 참조하고 있다.&lt;br /&gt;
사용자가 *.dat 확장명을 가진 파일에 대해서만 직렬화를 이용한 저장 및 불러오기를 진행하려고 한다.&lt;br /&gt;
툴바에서 사용되는 파일 다이얼로그 인스턴스에 접근하는 방법을 모르기에&lt;br /&gt;
CFile객체로 접근하여 파일의 패스 정보를 이용해 파일을 필터링한다.&lt;/p&gt;
&lt;figcaption&gt;CNormalSerializeDoc.cpp - Serialize()&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;CFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFilePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dotIdx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReverseFind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'.'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dotIdx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extension_length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dotIdx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileExtensionStr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extension_length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;AfxGetMainWnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MessageBox&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileExtensionStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileExtensionStr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Compare&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;m_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;글 다썻다아 ~&lt;/strong&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="툴바" /><category term="Toolbar" /><category term="직렬화" /><category term="serialize" /><category term="serialization" /><category term="CArchive" /><summary type="html">[MFC][실습] Document CAcrchive 기본타입 및 객체 직렬화</summary></entry></feed>