<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://tars-c.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://tars-c.github.io/" rel="alternate" type="text/html" /><updated>2020-05-01T23:47:24+09:00</updated><id>https://tars-c.github.io/feed.xml</id><title type="html">타스의 개발 블로그</title><subtitle>기록은 지식이라고 믿는 자의 블로그</subtitle><author><name>타스 (TARS-C)</name></author><entry><title type="html">[MFC] 클래스 계층도</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/Class-MFC-%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B3%84%EC%B8%B5%EB%8F%84/" rel="alternate" type="text/html" title="[MFC] 클래스 계층도" /><published>2020-05-01T00:00:00+09:00</published><updated>2020-05-01T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/Class%20-%20MFC%20%ED%81%B4%EB%9E%98%EC%8A%A4%20%EA%B3%84%EC%B8%B5%EB%8F%84</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/Class-MFC-%ED%81%B4%EB%9E%98%EC%8A%A4-%EA%B3%84%EC%B8%B5%EB%8F%84/">&lt;p&gt;Microsoft에서 제공하는 MFC Class Hierarchy(MFC 클래스 계층도)입니다.&lt;br /&gt;
아래 모든 사진의 출처는 Microsoft가 가지고 있습니다.&lt;/p&gt;
&lt;h2 id=&quot;part1-cobject를-상속받은-클래스-mfc-클래스-계층&quot;&gt;PART1: CObject를 상속받은 클래스 MFC 클래스 계층&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/Hierarchy/mfc_hierarchy_chart1of3.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;part2-ccmdtarget-및-cwnd를-상속받은-클래스-계층&quot;&gt;PART2: CCmdTarget 및 CWnd를 상속받은 클래스 계층&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/Hierarchy/mfc_hierarchy_chart2of3.png&quot; alt=&quot;img2&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;part3-cobject를-상속받지-않은-클래스-계층&quot;&gt;PART3: CObject를 상속받지 않은 클래스 계층&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/Hierarchy/mfc_hierarchy_chart3of3.png&quot; alt=&quot;img3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;참고링크: &lt;a href=&quot;https://docs.microsoft.com/ko-kr/cpp/mfc/hierarchy-chart?view=vs-2019&quot; target=&quot;_blank&quot;&gt;MSDN&lt;/a&gt;(사이트 내 PDF 다운로드 지원)&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="MFC" /><category term="Class" /><category term="Hierarchy" /><summary type="html">[MFC] 클래스 계층도</summary></entry><entry><title type="html">[MFC][실습] CImage : 이미지 불러오고 출력하기</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cimage/CImage-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B3%A0-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="[MFC][실습] CImage : 이미지 불러오고 출력하기" /><published>2020-05-01T00:00:00+09:00</published><updated>2020-05-01T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cimage/CImage%20-%20%EC%9D%B4%EB%AF%B8%EC%A7%80%20%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B3%A0%20%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cimage/CImage-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B3%A0-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0/">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;MFC는 이미지를 출력할 때 비트맵 변환과정을 거치게 됩니다.&lt;br /&gt;
과거 비트맵을 출력하기 위해서는 복잡한 과정이 있었지만 시간이 지나면서 많은 변화를 겪게되어&lt;br /&gt;
함수 몇가지를 이용하여 이미지를 아주 간단하게 출력할 수 있습니다.&lt;/p&gt;

&lt;p&gt;비트맵(*.bmp) 확장명을 가진 파일을 불러오고 간단히 출력해보도록 하겠습니다.&lt;br /&gt;
OnPaint에서 작업을 했기에 dc 변수의 타입은 OnPaintDC입니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;이미지 크기가 큰 경우&lt;/code&gt;에는 초기화되는 시점에 &lt;code class=&quot;highlighter-rouge&quot;&gt;미리 로드&lt;/code&gt;하여&lt;br /&gt;
멤버 및 전역변수로 접근하여 사용하는 것이 좋습니다.&lt;br /&gt;
이 예제에서는 아주 간단하게 알아보는 것이므로 따로 작업하지 않습니다.&lt;/p&gt;

&lt;p&gt;이미지를 단순히 불러오고 화면에 출력하는건 &lt;code class=&quot;highlighter-rouge&quot;&gt;CImage 클래스&lt;/code&gt;가 적합합니다.&lt;br /&gt;
CImage 클래스는 &lt;code class=&quot;highlighter-rouge&quot;&gt;#include &amp;lt;atlimage.h&amp;gt;&lt;/code&gt;를 필요로 합니다.&lt;/p&gt;

&lt;p&gt;비트맵을 로드 하는 방법은 총 2가지가 존재합니다.&lt;/p&gt;

&lt;h2 id=&quot;리소스id를-이용하여-비트맵-출력하기&quot;&gt;리소스ID를 이용하여 비트맵 출력하기&lt;/h2&gt;
&lt;!-- 리소스ID를 이용해 비트맵을 불러올 때에는 CBitmap 클래스에서 제공하는 LoadBitmap\(\) 함수를 이용합니다.
리소스ID를 사용하기 위해서는 리소스뷰에서 비트맵을 추가하거나 삽입해야 합니다.
비트맵 자체에는 DC가 없어서 출력할 수 없습니다.
호환되는 DC를 만들고 비트맵을 담아주도록 합니다. --&gt;
&lt;p&gt;LoadFromResource() 함수를 이용하려면 Resource View에서 비트맵 파일을 추가합니다.&lt;br /&gt;
추가한 비트맵 파일에 리소스ID를 변경 및 부여하도록 합니다.&lt;br /&gt;
비트맵을 불러오려면 CImage 클래스에서 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;LoadFromResource() 함수&lt;/code&gt;를 이용합니다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;CImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoadFromResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AfxGetInstanceHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDB_BITMAP1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BitBlt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_hDC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRCCOPY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//bmpImage.Detach();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;비트맵-파일을-이용하여-비트맵-출력하기&quot;&gt;비트맵 파일을 이용하여 비트맵 출력하기&lt;/h2&gt;
&lt;p&gt;비트맵 파일을 불러올 땐 CImage 클래스가 제공하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Load() 함수&lt;/code&gt;를 이용합니다.&lt;br /&gt;
Load() 함수는 JPEG, GIF, BMP 및 PNG 확장명을 가진 이미지 파일을 불러옵니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;비트맵을 화면에 출력하기 전에 파일을 제대로 불러왔는지 여부를 판단해야합니다.&lt;br /&gt;
Load() 함수가 반환하는 타입은 H_REUSLT 입니다.&lt;br /&gt;
반환값은 S_OK(성공) 및 S_FALSE(실패) 값을 가지고 있습니다.&lt;br /&gt;
SUCCEEDED, FAILED 매크로 함수를 이용하여 성공 및 실패 여부 확인을 조건문에 활용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;파일을 불러올 때 기본위치는 cpp 소스파일이 포함된 프로젝트 위치로 지정되어 있습니다.&lt;br /&gt;
상대경로를 사용하여 이미지 폴더에 있는 이미지 파일을 불러오면 됩니다.&lt;/p&gt;

&lt;p&gt;CImage 인스턴스에서 제공되는 BitBlt() 함수를 이용하면&lt;br /&gt;
특정 DC에 CImage 인스턴스가 가지고 있는 이미지를 복사 및 출력할 수 있습니다.&lt;br /&gt;
BitBlt() 함수는 ATL 함수이기에 DC는 HDC 타입을 요구합니다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;CImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;RAY.bmp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BitBlt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_hDC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRCCOPY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// bmpImage.Detach();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;간단히 위에 사용 된 BitBlt() 함수를 해석해보면&lt;br /&gt;
   (0,0)에서부터 전체크기만큼 bmpImage 인스턴스가 가지고 있는 이미지 데이터를&lt;br /&gt;
   dc.m_hDC에다가 (80,15)위치에서 (300,300)크기만큼의 이미지를 복사해라 정도가 되겠네요?!&lt;/p&gt;

&lt;h2 id=&quot;f리소스id를-이용해-해당-dc에-이미지를-그려주는-함수&quot;&gt;[F]리소스ID를 이용해 해당 DC에 이미지를 그려주는 함수&lt;/h2&gt;
&lt;figcaption&gt;이 함수는 크기가 작은 이미지를 사용했을 때 빠릅니다&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DrawFromResourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CDC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DrawFromResourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CDC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LoadFromResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AfxGetInstanceHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BitBlt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_hDC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRCCOPY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Detach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//DrawFromResourceID(dc, 400, 15, 300, 300, IDB_BITMAP1, 0, 0);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;f이미지-파일을-이용해-해당-dc에-이미지를-그려주는-함수&quot;&gt;[F]이미지 파일을 이용해 해당 DC에 이미지를 그려주는 함수&lt;/h2&gt;
&lt;figcaption&gt;이 함수는 크기가 작은 이미지를 사용했을 때 빠릅니다&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DrawFromFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CDC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPCWSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DrawFromFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CDC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPCWSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FAILED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BitBlt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_hDC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;srcY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SRCCOPY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;bmpImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Detach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//DrawFromFile(dc, 80, 15, 300, 300, _T(&quot;.\\res\\img\\RAY.BMP&quot;), 0, 0);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;정리&quot;&gt;정리&lt;/h2&gt;
&lt;p&gt;비트맵 확장명을 가진 파일을 리소스ID를 이용 및 파일을 직접 불러오고&lt;br /&gt;
이미지를 출력하는 방법에 대해 알아보았습니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;이미지를 간단히 불러오고 화면에 출력하는데는 CImage 클래스가 적합합니다.&lt;/li&gt;
  &lt;li&gt;LoadFromResource() 함수는 리소스 ID를 이용해 비트맵을 불러옵니다.&lt;/li&gt;
  &lt;li&gt;Load() 함수는 이미지 파일을 이용해 비트맵을 불러옵니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;실습 결과:&lt;br /&gt;
&lt;img src=&quot;/assets/images/CImage/CImageCBitmapBitBlt.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="비트맵" /><category term="CImage" /><category term="이미지" /><summary type="html">[MFC][실습] CImage : 이미지 불러오고 출력하기</summary></entry><entry><title type="html">[잡담] MFC 및 WINAPI 이렇게 공부하자</title><link href="https://tars-c.github.io/%EC%9E%A1%EB%8B%B4/MFC%EB%A5%BC-%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80%EC%A0%90/" rel="alternate" type="text/html" title="[잡담] MFC 및 WINAPI 이렇게 공부하자" /><published>2020-04-30T00:00:00+09:00</published><updated>2020-04-30T00:00:00+09:00</updated><id>https://tars-c.github.io/%EC%9E%A1%EB%8B%B4/MFC%EB%A5%BC%20%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C%20%EB%8A%90%EB%82%80%EC%A0%90</id><content type="html" xml:base="https://tars-c.github.io/%EC%9E%A1%EB%8B%B4/MFC%EB%A5%BC-%EA%B3%B5%EB%B6%80%ED%95%98%EB%A9%B4%EC%84%9C-%EB%8A%90%EB%82%80%EC%A0%90/">&lt;p&gt;MFC 및 WINAPI 를 계속 공부하면서 느낀게 하나 있습니다.&lt;br /&gt;
클래스가 제공하는 함수가 나무나 복잡하다는 것입니다.&lt;br /&gt;
함수 이름도 심지어 비슷비슷해서 상당히 복잡해서 익히는데 큰 시간이 소비되는 것 같습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;MFC나 WINAPI는 상당히 코드가 길게 구성되어 있습니다.&lt;br /&gt;
몇몇분들이 이 함수의 매개변수들을 외우려고 하지만&lt;br /&gt;
공부하는 기간동안 이를 다 외워서 코딩하는건 시간낭비일 수도 있습니다.&lt;/p&gt;

&lt;p&gt;전체적으로 작동하는 흐름을 보자면&lt;br /&gt;
수 많은 구조체들이 시스템의 일부를 가르키고 있고 복잡한 구조체를 이용해&lt;br /&gt;
객체를 만들고 함수를 이용하여 시스템을 제어하는 것입니다.&lt;/p&gt;

&lt;p&gt;이를 어느정도 이해를 하는 것이 중요합니다.&lt;/p&gt;

&lt;p&gt;수 많은 클래스가 제공하는 함수를 외울 필요는 없습니다. (외우면 당연히 좋아요)&lt;br /&gt;
하지만 해당 구조체 및 클래스가 어떤 역할을 하는지 이해하는건 필수인 것 같습니다.&lt;br /&gt;
그리고 역할을 이해하게 된다면 제공하는 함수에 대해서도 간접적으로 알 수 있습니다.&lt;br /&gt;
이해를 한다면 나중에 MFC 프로젝트가 필요하거나 WINAPI를 이용한 프로그램을 제작할 때&lt;br /&gt;
복잡한 구조체에 당황하지 않고 프로그래밍이 가능할 것 같습니다. &lt;br /&gt;
클래스 계층도를 이해하는 것 또한 중요합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;비슷하면서도 같아보이는 클래스 및 구조체들..
    &lt;ul&gt;
      &lt;li&gt;HBITMAP: (WINAPI BITMAP HANDLE)&lt;/li&gt;
      &lt;li&gt;CBitmap: (GDI BITMAP 객체)&lt;/li&gt;
      &lt;li&gt;Bitmap: (GDI+ BITMAP 객체)&lt;/li&gt;
      &lt;li&gt;BITMAP: (비트맵 정보를 가지는 구조체)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;구조체 및 클래스 이름도 상당히 비슷합니다.&lt;br /&gt;
이름들이 거의 한글자씩만 다릅니다. (하아…)&lt;br /&gt;
자주 쓰이는 함수는 어떤 클래스에 속해있는지 알아야하고 함수가 제공하는 매개변수는 msdn이나&lt;br /&gt;
구글링을 통해 큰 흐름을 익히는 것이 중요한 것 같습니다.&lt;/p&gt;

&lt;p&gt;함수 전부 외우거나 이해하는 것보다&lt;br /&gt;
큰 틀(구조체 및 클래스)을 이해하는 것이 중요합니다.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;위 내용을 간략히 정리해보면&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;수 많은 클래스들이 제공하는 함수 및 매개변수를 외우려하지말라&lt;/li&gt;
  &lt;li&gt;클래스와 구조체가 어떤 역할 및 기능을 하는지는 알아두도록 하자
    &lt;ul&gt;
      &lt;li&gt;추가로 함수에서 클래스와 구조체가 필요로 한다면 왜 필요한지 정도는 알아두도록 하자(쓰임세)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;복잡한 함수의 매개변수는 구글링이나 msdn을 참고하자&lt;/li&gt;
&lt;/ol&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="MFC" /><category term="공부방법" /><summary type="html">[잡담] MFC 및 WINAPI 이렇게 공부하자</summary></entry><entry><title type="html">[잡담] 메인기술을 가지는 사람이 되어보자</title><link href="https://tars-c.github.io/%EC%9E%A1%EB%8B%B4/%EB%A9%94%EC%9D%B8%EA%B8%B0%EC%88%A0%EC%9D%84-%EA%B0%80%EC%A7%80%EB%8A%94-%EC%82%AC%EB%9E%8C%EC%9D%B4-%EB%90%98%EC%96%B4%EB%B3%B4%EC%9E%90/" rel="alternate" type="text/html" title="[잡담] 메인기술을 가지는 사람이 되어보자" /><published>2020-04-26T00:00:00+09:00</published><updated>2020-04-26T00:00:00+09:00</updated><id>https://tars-c.github.io/%EC%9E%A1%EB%8B%B4/%EB%A9%94%EC%9D%B8%EA%B8%B0%EC%88%A0%EC%9D%84%20%EA%B0%80%EC%A7%80%EB%8A%94%20%EC%82%AC%EB%9E%8C%EC%9D%B4%20%EB%90%98%EC%96%B4%EB%B3%B4%EC%9E%90</id><content type="html" xml:base="https://tars-c.github.io/%EC%9E%A1%EB%8B%B4/%EB%A9%94%EC%9D%B8%EA%B8%B0%EC%88%A0%EC%9D%84-%EA%B0%80%EC%A7%80%EB%8A%94-%EC%82%AC%EB%9E%8C%EC%9D%B4-%EB%90%98%EC%96%B4%EB%B3%B4%EC%9E%90/">&lt;p&gt;&lt;strong&gt;이 글은 생각나는 대로 적는 것이니라 글의 두서가 없을 수 있으니 참고 바란다.&lt;/strong&gt;&lt;br /&gt;
&lt;br /&gt;
블로그에 포스팅하면서 몇가지 의문점이 들었다…&lt;br /&gt;
내가 짧게 본 것들을 누군가에게 자세히 설명할 수 있을까 ?&lt;br /&gt;
왜 나는 단순하게는 설명할 수 있는데 깊게는 설명하지 못할까 ?&lt;br /&gt;
분명 머릿속에서 코드에 대한 작동 흐름은 있는거 같은데도 말이지..&lt;br /&gt;
설명만 하면 입이 잘 안떨어진단 말이지..&lt;/p&gt;

&lt;p&gt;하루종일 나는 모니터 앞에 앉아서 공부만 한다.&lt;br /&gt;
가끔 친구들이 부르면 나가지만 메인은 방 구석에 있는 책상이다.&lt;br /&gt;
어제는 오랜만에 보는 사람들이 좋아 과음한 날이었다..&lt;br /&gt;
해가 뜨고 해가 저무는 것 또한 책상에 앉아서 보고있다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;블로그의 글을 포스팅 하기 전에 인터넷으로 찾은 정보를 모으고 수집한다.&lt;br /&gt;
그리고 이를 정리하여 포스팅을 써내려 간다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 정리한 정보도 누군가에게 도움이 될 수 있다고 생각하니까 …&lt;br /&gt;
정보를 정리하고 내것으로 만드는 것이 나는 지식이라고 생각했다.&lt;br /&gt;
이때까지 나는 중요한 것들을 깨닫지 못했다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내것으로 만든다는 기준이 애매하다는 것을 이제서야 깨달았다.&lt;br /&gt;
MFC를 공부하면서 항상 나 자신이 부족하다는 것을 알고 있다.&lt;br /&gt;
왜 공부는 주입식 암기처럼 할 수 밖에 없을까 ?&lt;br /&gt;
내가 제대로 이해는 하고 있는걸까 ?&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 게임 스크립트를 보조해서 작업했을 때에는 부족했지만&lt;br /&gt;
내가 원하는 대로 기획하는 것과 코드는 어느정도 짤 수 있는데&lt;br /&gt;
MFC는 생각보다 나에게 어렵다고 느껴지기만 했다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아마도 수 많은 매개변수로 구성된 함수들이 있어서일까 ?&lt;br /&gt;
정말 구글링 없이는 프로그램을 만들 수 없을까 ?&lt;br /&gt;
자주 사용하는 함수쯤은 암기할 수 있는거 아닐까 ?&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그래서 나는 C언어를 배우듯이 다시 초심으로 돌아갔다.&lt;br /&gt;
우연히 좋은 대학교 강의를 발견하여 블로그 포스팅을 잠시 중단하고 열심히 공부했다.&lt;br /&gt;
그리고 더블버퍼링에 대해 더 자세히 알게된 시간을 가지게도 되었고&lt;br /&gt;
컨트롤 제어에 대해 부족한 부분을 채워주는 계기도 되었다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아직 강의를 마지막까지 다 보지는 않았지만&lt;br /&gt;
느낀바를 잊어먹기 전에 생각나는 대로 적어보았다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;공부를 하면서 느끼는 것이지만 하루라는 시간은 매우 짧은 것 같다. 그리고 기술의 발전은 매우 빠르다는 것이다.&lt;br /&gt;
하지만 여러 사람이 공들여 만든 기술들을 혼자서 완벽하게 익히기에는 턱없이 시간이 부족하다.&lt;br /&gt;
부족한건 기술문서를 참고하고 메인기술을 하나쯤은 가지고 있어야&lt;br /&gt;
이 경쟁력에서 살아남을 수 있는것이 아닐까 ?&lt;br /&gt;
특정 분야와 팀이 있는 것이 아닐까 생각이든다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아직도 길다란 길이 남은 것 같다. 오늘도 화이팅!&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- MFC 강의 목록 -&lt;/strong&gt;
&lt;img src=&quot;/assets/images/잡담/lec.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;교수님 감사합니다.&lt;/p&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><summary type="html">[잡담] 메인기술을 가지는 사람이 되어보자</summary></entry><entry><title type="html">[MFC] 컨트롤 핸들(HWND) 가져오기</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/control/%EC%BB%A8%ED%8A%B8%EB%A1%A4-%ED%95%B8%EB%93%A4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[MFC] 컨트롤 핸들(HWND) 가져오기" /><published>2020-04-18T00:00:00+09:00</published><updated>2020-04-12T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/control/%EC%BB%A8%ED%8A%B8%EB%A1%A4%20%ED%95%B8%EB%93%A4%20%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/control/%EC%BB%A8%ED%8A%B8%EB%A1%A4-%ED%95%B8%EB%93%A4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;MFC에는 수 많은 컨트롤이 존재합니다.&lt;br /&gt;
이 컨트롤을 제어하기 위해서는 CWnd 인스턴스에 접근하거나&lt;br /&gt;
핸들을 이용하는 방식이 있습니다.&lt;/p&gt;

&lt;p&gt;WINAPI에서는 HWND 구조체를 이용해 컨트롤을 제어했지만&lt;br /&gt;
MFC에서는 조금 더 편리하게 CWnd 윈도우 클래스의 인스턴스를 접근하여 제어할 수 있습니다.&lt;/p&gt;

&lt;p&gt;핸들을 가져오는 방법은 여러가지 있습니다.&lt;br /&gt;
그중 대표적으로 사용하는 방법에 대해 알아보겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;리소스id를-이용해-핸들-얻기-getdlgitem&quot;&gt;리소스ID를 이용해 핸들 얻기 (GetDlgItem)&lt;/h2&gt;
&lt;p&gt;GetDlgItem() 함수를 사용하기 위해서는 해당 컨트롤이 가진 리소스ID에 대해 알아야합니다.&lt;br /&gt;
리소스ID는 숫자지만 편리하게 #define을 사용해 관리 합니다. (resource.h 파일에 명시됨)&lt;br /&gt;
뷰를 여러개 사용하게 되면 해당 뷰에 컨트롤이 포함되어 있어야만 정상적으로 가져올 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDlgItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MY_CONTROL_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
GetDlgItem() 함수를 이용해 CWnd 인스턴스를 얻었으면&lt;br /&gt;
형변환을 통해 해당 컨트롤 타입으로 변환하여 해당 인스턴스에 대한 함수를 사용할 수 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;예를들어 Edit Control을 제어한다면 아래와 같이 사용할 수 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pEdit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDlgItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IDC_MY_EDIT1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SetWindowText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;제어 성공!));&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;hwnd를-이용해-cwnd-인스턴스-얻기-fromhandle&quot;&gt;HWND를 이용해 CWnd 인스턴스 얻기 (FromHandle)&lt;/h2&gt;
&lt;p&gt;가끔 WINAPI 함수를 이용해야 한다면 핸들 구조체를(HWND) 이용할 수 밖에 없습니다.&lt;br /&gt;
MFC에서는 핸들(HWND)을 이용한 접근방법보다 CWnd 인스턴스로 접근방법이 많습니다.&lt;br /&gt;
그러므로 MFC는 변환하는 함수를 제공해줍니다.&lt;/p&gt;

&lt;p&gt;FromHandle() 함수를 이용한다면 컨트롤이 가진 핸들에 대해 CWnd* 인스턴스를 반환시켜 줍니다.&lt;br /&gt;
해당 핸들의 컨트롤이 가진 CWnd 타입의 인스턴스가 없다면&lt;br /&gt;
임시로 인스턴스를 생성하여 포인터를 반환해줍니다.&lt;br /&gt;&lt;br /&gt;
임시로 생성된 인스턴스는 전역으로 사용하기에 적절하지 못합니다.&lt;br /&gt;
지역변수처럼 사용하고 버려주시면 됩니다.&lt;br /&gt;
FromHandle() 함수는 static 함수이므로 인스턴스가 따로 필요하지 않습니다.&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;HWND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;editHwnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CreateWindow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;edit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CWnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;editWnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CWnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;editHwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pEDit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CEdit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;editWnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cwnd-인스턴스에서-핸들hwnd-접근&quot;&gt;CWnd 인스턴스에서 핸들(HWND) 접근&lt;/h2&gt;
&lt;p&gt;CWnd 인스턴스에서는 아주 쉽게 멤버변수로 핸들(HWND)을 제공합니다.&lt;br /&gt;
CWnd 클래스를 상속받은 자식 인스턴스에 대해서도 핸들(HWND)로 접근할 수 있습니다. (뷰 포함)&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_hWnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetSafeHwnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;f리소스id를-사용하여-cwnd를-반환하는-함수&quot;&gt;[F]리소스ID를 사용하여 CWnd*를 반환하는 함수&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;CWnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getCWndFromResourceID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controlID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetDlgItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;controlID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;fhwnd를-사용하여-cwnd를-반환하는-함수&quot;&gt;[F]HWND를 사용하여 CWnd*를 반환하는 함수&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;CWnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getCWndFromHWND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HWND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hWnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 임시 인스턴스가 생성될 수 있으니 주의할 필요가 있다.&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CWnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromHandle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hWnd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="프로그래밍" /><category term="Control" /><category term="컨트롤" /><summary type="html">[MFC] 컨트롤 핸들(HWND) 가져오기</summary></entry><entry><title type="html">[MFC] CFileDialog : 여러개의 파일을 선택하여 정보 가져오기</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%98%EC%97%AC-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/" rel="alternate" type="text/html" title="[MFC] CFileDialog : 여러개의 파일을 선택하여 정보 가져오기" /><published>2020-04-18T00:00:00+09:00</published><updated>2020-04-18T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog%20-%20%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98%20%ED%8C%8C%EC%9D%BC%EC%9D%84%20%EC%84%A0%ED%83%9D%ED%95%98%EC%97%AC%20%EC%A0%95%EB%B3%B4%20%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%97%AC%EB%9F%AC%EA%B0%9C%EC%9D%98-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%98%EC%97%AC-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0/">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;FileDialog에서는 여러개의 파일을 선택하는 기능을 지원하고 있습니다. &lt;br /&gt;
Adobe사 포토샵 같은 프로그램을 보면 이미지를 여러개 선택해 불러와서 사용자 작업을 처리합니다.&lt;/p&gt;

&lt;p&gt;위와 같은 작업은 개발자가 프로그램을 만들 때&lt;br /&gt;
여러개의 파일을 선택해서 정보를 얻어 처리하는 프로그래밍을 했기에 가능합니다.&lt;/p&gt;

&lt;p&gt;이 글에서는 여러개의 파일을 선택해 선택된 파일에 대한 정보를 가져오는 방법에 대해 적어보겠습니다.&lt;/p&gt;

&lt;p&gt;선택한 여러개의 파일 정보를 구하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;OFN_ALLOWMULTISELECT&lt;/code&gt; 플래그가 적용되어야 합니다.&lt;br /&gt;
FileDialog는 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;열기모드&lt;/code&gt;(TRUE)로 작동해야합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[ ! ]&lt;/code&gt; 아래 작업은 &lt;code class=&quot;highlighter-rouge&quot;&gt;DoModal() 함수가 호출되기 이전에 진행&lt;/code&gt;해야 합니다.&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여러개의 파일을 선택하기 위해서는 아래에 적힌 작업을 모두 진행해야 합니다.
    &lt;ol&gt;
      &lt;li&gt;기존 버퍼를 교체 (새롭게 버퍼를 만듬)&lt;/li&gt;
      &lt;li&gt;FileDialog가 가지고 있는 버퍼 크기 변경&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-기존-버퍼를-교체&quot;&gt;1. 기존 버퍼를 교체&lt;/h2&gt;
&lt;p&gt;FileDialog가 여러개의 파일 정보를 얻기 위해서는 큰 버퍼가 필요합니다.&lt;/p&gt;

&lt;p&gt;기본적으로 버퍼를 가지고 있지만 1개의 파일에 대한 PATH 정보를 담을 수 있으며&lt;br /&gt;
기본 크기는 260으로 설정되어 있습니다.&lt;/p&gt;

&lt;p&gt;작은 크기의 버퍼를 사용할 경우 여러개의 파일을 선택했을 때 오류가 발생하거나&lt;br /&gt;
선택한 모든 파일에 대한 일부 파일의 정보만 가져올 수 있습니다.&lt;/p&gt;

&lt;p&gt;기존 버퍼를 변경하기 위해서는 버퍼의 위치(포인터)를 나타내는 멤버변수 &lt;code class=&quot;highlighter-rouge&quot;&gt;m_ofn.lpstrFile&lt;/code&gt; 값을 변경해야 합니다.&lt;br /&gt;
CString 지역변수를 선언하고 가르키는 버퍼를 변경해보도록 하겠습니다.&lt;br /&gt;
CString 클래스 GetBuffer() 함수를 이용해서 해당 객체가 가지고 있는 데이터의 시작 위치(포인터)를 얻어올 수 있습니다.&lt;br /&gt;
GetBuffer() 함수를 이용해 새롭게 객체를 할당 받았다면&lt;br /&gt;
반드시 ReleaseBuffer() 함수를 호출하여 메모리를 해제해야 됩니다.&lt;/p&gt;

&lt;p&gt;버퍼를 변경하는 코드는 다음과 같습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CFileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OFN_ALLOWMULTISELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;filePathList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_ofn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpstrFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePathList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4096&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoModal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IDOK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;filePathList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReleaseBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;버퍼만 변경한다고 해서 프로그램이 정상적으로 작동하는 것은 아닙니다.&lt;br /&gt;
고정된 버퍼의 크기는 런타임 오류가 발생할 위험이 있습니다.&lt;/p&gt;

&lt;p&gt;사용자가 최대 몇개의 파일을 선택할 것인지에 대해 생각하여 버퍼의 크기를 명시하는 것이 좋습니다.&lt;/p&gt;

&lt;h2 id=&quot;2-버퍼의-크기-변경&quot;&gt;2. 버퍼의 크기 변경&lt;/h2&gt;
&lt;p&gt;버퍼의 크기를 변경하기 위해서는 멤버변수 &lt;code class=&quot;highlighter-rouge&quot;&gt;m_ofn.nMaxFile&lt;/code&gt; 값을 변경해야 합니다.&lt;br /&gt;
버퍼의 크기를 지정할 때에는 주어진 공식을 이용하는 것이 좋습니다.&lt;br /&gt;
버퍼의 크기 계산 공식은 &lt;code class=&quot;highlighter-rouge&quot;&gt;n * (MAX_PATH + 1) + 1)&lt;/code&gt; 입니다. (참고:MSDN)&lt;br /&gt;
이 공식은 n개의 파일에 대한 PATH 정보를 담을 수 있는 것을 의미합니다.&lt;/p&gt;

&lt;p&gt;최소 99개의 파일을 선택할 수 있는 버퍼 크기를 변경하는 코드는 다음과 같습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nMaxFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;nBufferSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nMaxFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_MAX_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_ofn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nMaxFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nBufferSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;선택된 파일에 따라 PATH 정보 크기는 다릅니다.&lt;br /&gt;
그러므로 PATH 정보가 차지하고 있는 데이터의 크기는 항상 다릅니다.&lt;br /&gt;
PATH가 아무리 긴다고 가정하에 99개의 파일 정보를 가져올 수 있으며&lt;br /&gt;
반대로 PATH가 너무 짧은 경우 99개 이상의 파일의 정보를 가져올 수 있습니다.&lt;/p&gt;

&lt;h2 id=&quot;3-다중-선택-가능한-파일-다이얼로그-띄우기&quot;&gt;3. 다중 선택 가능한 파일 다이얼로그 띄우기&lt;/h2&gt;
&lt;p&gt;위에서 배운 내용을 종합해 코드로 만들어보겠습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePathList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bufferSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nBufferSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_MAX_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CFileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OFN_ALLOWMULTISELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CFileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OFN_ALLOWMULTISELECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_ofn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpstrFile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filePathList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetBuffer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bufferSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoModal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-여러개의-파일-정보-가져오기&quot;&gt;4. 여러개의 파일 정보 가져오기&lt;/h2&gt;

&lt;p&gt;여러개의 선택된 파일 정보를 가져오기 위해서는 2가지 함수를 사용하여 구할 수 있습니다.&lt;br /&gt;
이 함수들은 DoModal() 함수가 호출 이후 사용해야 합니다.&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;아래 함수들은 CFileDialog 클래스에서 기본적으로 제공하는 함수들입니다.
    &lt;ol&gt;
      &lt;li&gt;GetStartPosition()&lt;/li&gt;
      &lt;li&gt;GetNextPathName()&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;두 함수는 바로가기 파일에 대해서 값을 가져올 때 오류가 발생할 수 있으니 참고 바랍니다.
GetStartPosition() 함수는 FileDialog가 가진 버퍼의 시작위치를 얻어올 수 있습니다.&lt;br /&gt;
GetNextPathName() 함수는 버퍼의 담긴 여러개의 PATH 정보들을 구분해서 하나씩 얻어올 수 있습니다.&lt;br /&gt;
얻어온 데이터들을 이용해 파일이름 혹은 확장명만 얻기 위해서는 &lt;a href=&quot;/../프로그래밍/mfc/file/File-파일-PATH-데이터-정보-구하기-(이름,-확장명,-폴더,-상위폴더)/&quot; target=&quot;_blank&quot;&gt;따로 프로그래밍&lt;/a&gt;을 해야합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;POSITION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetStartPosition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fileDialog_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetNextPathName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;GetNextPathName() 함수는 더 이상 구분하여 얻어올 PATH 정보가 없다면 NULL을 반환하므로&lt;br /&gt;
반복문을 이용해 하나씩 선택했던 파일에 대한 PATH 정보를 꺼내올 수 있습니다.&lt;/p&gt;

&lt;p&gt;얻어온 PATH 정보는 CString 타입의 데이터이며 아래 같이 PATH 정보를 가지고 있습니다.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Temp&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Test1.txt
C:&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Temp&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Test2.txt
C:&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Temp&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Test3.txt
C:&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Temp&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;Test3.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;GetNextPathName() 함수를 이용하여 PATH 정보를 얻어와&lt;br /&gt;
CString 클래스에서 제공되는 함수들을 이용하면 파일이름 혹은 파일확장명을 구할 수 있습니다.
자체적으로 제공해주는 함수가 없으므로 따로 프로그래밍을 해야합니다.&lt;/p&gt;
&lt;h2 id=&quot;4-결론&quot;&gt;4. 결론&lt;/h2&gt;

&lt;p&gt;위 내용을 정리해보겠습니다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;여러개의 파일을 선택할 때
    &lt;ul&gt;
      &lt;li&gt;OFN_ALLOWMULTISELECT 플래그 적용&lt;/li&gt;
      &lt;li&gt;열기모드 사용&lt;/li&gt;
      &lt;li&gt;기존 FileDialog가 쓰던 버퍼는 작으므로 새로운 큰 버퍼로 변경&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;기존 버퍼를 새로운 버퍼로 변경
    &lt;ul&gt;
      &lt;li&gt;DoModal() 함수가 호출되기 전에 작업 진행&lt;/li&gt;
      &lt;li&gt;CString GetBuffer(), ReleaseBuffer() 함수를 이용하여 새로운 버퍼를 만듬&lt;/li&gt;
      &lt;li&gt;m_ofn.lpstrFile 값을 다르게 변경하여 새로운 버퍼의 시작 위치를 가르킴&lt;/li&gt;
      &lt;li&gt;m_ofn.nMaxFile 값을 다르게 변경하여 버퍼 크기를 변경 (반드시 공식이용)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;여러개의 파일 정보를 얻기
    &lt;ul&gt;
      &lt;li&gt;GetStartPosition() 함수 반환값을 이용하여 버퍼의 시작위치를 구함&lt;/li&gt;
      &lt;li&gt;GetNextPathName() 함수로 버퍼의 시작위치에서 여러개의 파일 PATH 정보를 구분하여 가져옴&lt;/li&gt;
      &lt;li&gt;얻어온 PATH 정보에서 파일이름 및 확장명을 얻어 오기 위해서는 &lt;a href=&quot;/../프로그래밍/mfc/file/File-파일-PATH-데이터-정보-구하기-(이름,-확장명,-폴더,-상위폴더)/&quot; target=&quot;_blank&quot;&gt;따로 프로그래밍&lt;/a&gt;을 해야함&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;오타 및 잘못된 내용에 대해 피드백 해주시는건 언제든 환영합니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="프로그래밍" /><category term="Cpp" /><category term="C++" /><category term="MFC" /><category term="Dialog" /><category term="CFileDialog" /><category term="CFile" /><category term="파일" /><category term="다중 파일 정보" /><category term="파일정보" /><category term="파일이름" /><category term="파일확장명" /><category term="파일경로" /><category term="이름" /><category term="경로" /><category term="확장명" /><category term="GetNextPathName" /><category term="GetStartPosition" /><summary type="html">[MFC] CFileDialog : 여러개의 파일을 선택하여 정보 가져오기</summary></entry><entry><title type="html">[MFC][실습] CFileDialog : 파일 정보 가져오기(이름, 확장명, 시작경로, 파일경로)</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%84%A0%ED%83%9D%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0(%EC%9D%B4%EB%A6%84,-%ED%99%95%EC%9E%A5%EB%AA%85,-%EA%B2%BD%EB%A1%9C)/" rel="alternate" type="text/html" title="[MFC][실습] CFileDialog : 파일 정보 가져오기(이름, 확장명, 시작경로, 파일경로)" /><published>2020-04-17T00:00:00+09:00</published><updated>2020-04-17T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog%20-%20%EC%84%A0%ED%83%9D%EB%90%9C%20%ED%8C%8C%EC%9D%BC%20%EC%A0%95%EB%B3%B4%20%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0(%EC%9D%B4%EB%A6%84,%20%ED%99%95%EC%9E%A5%EB%AA%85,%20%EA%B2%BD%EB%A1%9C)</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%84%A0%ED%83%9D%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0(%EC%9D%B4%EB%A6%84,-%ED%99%95%EC%9E%A5%EB%AA%85,-%EA%B2%BD%EB%A1%9C)/">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;CFileDialog 클래스에서 제공해주는 함수가 여려가지 있습니다.&lt;br /&gt;
그중에 FileDialog에서 파일 정보를 가져오는 자주 쓰이는 함수가 있습니다&lt;/p&gt;

&lt;p&gt;이 글에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;FileDialog에서 1개의 파일을 선택하여 정보를 가져오는 함수&lt;/code&gt;에 대해 알아보겠습니다.&lt;br /&gt;
아래 모든 함수들이 반환하는 타입은 CString입니다.&lt;/p&gt;

&lt;h2 id=&quot;1-확장명이-포함된-파일-이름-구하기&quot;&gt;1. 확장명이 포함된 파일 이름 구하기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;확장명이 포함된 파일 이름&lt;/code&gt;을 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFileName()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-확장명-없이-파일-이름만-구하기&quot;&gt;2. 확장명 없이 파일 이름만 구하기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;확장명이 미포함된 파일 이름&lt;/code&gt;만 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFileTitle()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFileTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFileTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3-파일-확장명-구하기&quot;&gt;3. 파일 확장명 구하기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;확장명&lt;/code&gt;을 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFileExt()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFileExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFileExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-시작-경로-가져오기&quot;&gt;4. 시작 경로 가져오기&lt;/h2&gt;
&lt;p&gt;반드시 m_ofn.lpstrInitialDir 멤버변수 값이 설정되어 있어야 합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;시작 경로&lt;/code&gt;를 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFolderPath()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFolderPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFolderPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;5-선택한-파일-경로-가져오기&quot;&gt;5. 선택한 파일 경로 가져오기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;선택한 파일에 대한 경로&lt;/code&gt;를 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetPathName()&lt;/code&gt; 입니다.&lt;br /&gt;
이 함수는 파일이름 및 확장명을 포함하여 선택된 파일에 대한 전체 경로를 가져오게 됩니다.&lt;br /&gt;
CString 클래스 Left(), RevesrseFind() 함수를 이용해 짤라내서 사용할 수 있습니다.
위 함수들은 부모 폴더를 구할 때에도 사용되오니 알아두시는게 좋습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetPathName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileFullPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPathName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileFullPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileFullPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReverseFind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'\\'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;6-함수를-이용한-결과-출력&quot;&gt;6. 함수를 이용한 결과 출력&lt;/h2&gt;

&lt;p&gt;파일 정보를 가져오는 함수를 이용해 MainDialog에서 간단히 출력해보겠습니다.&lt;br /&gt;
솔루션 이름: MainDialog&lt;br /&gt;
프로젝트 형태: Dialog 기반&lt;/p&gt;

&lt;p&gt;경로 ‘C:\Temp’ 폴더에 존재하는 Text.txt 파일을 선택해보겠습니다.&lt;br /&gt;
결과:&lt;br /&gt;
&lt;img src=&quot;/assets/images/CFileDialog/MFC_ResultFileInfo.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;오타 및 잘못된 내용에 대해 피드백 해주시는건 언제든 환영합니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="프로그래밍" /><category term="Cpp" /><category term="C++" /><category term="MFC" /><category term="Dialog" /><category term="CFileDialog" /><category term="파일" /><category term="이름" /><category term="확장명" /><category term="경로" /><category term="가져오기" /><category term="정보가져오기" /><summary type="html">[MFC][실습] CFileDialog : 파일 정보 가져오기(이름, 확장명, 시작경로, 파일경로)</summary></entry><entry><title type="html">[MFC][실습] CFileDialog : 파일 정보 가져오기(이름, 확장명, 시작경로, 파일경로)</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%84%A0%ED%83%9D%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0(%EC%9D%B4%EB%A6%84,-%ED%99%95%EC%9E%A5%EB%AA%85,-%EA%B2%BD%EB%A1%9C)/" rel="alternate" type="text/html" title="[MFC][실습] CFileDialog : 파일 정보 가져오기(이름, 확장명, 시작경로, 파일경로)" /><published>2020-04-16T00:00:00+09:00</published><updated>2019-04-17T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog%20-%20%EC%84%A0%ED%83%9D%EB%90%9C%20%ED%8C%8C%EC%9D%BC%20%EC%A0%95%EB%B3%B4%20%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0(%EC%9D%B4%EB%A6%84,%20%ED%99%95%EC%9E%A5%EB%AA%85,%20%EA%B2%BD%EB%A1%9C)</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%84%A0%ED%83%9D%EB%90%9C-%ED%8C%8C%EC%9D%BC-%EC%A0%95%EB%B3%B4-%EA%B0%80%EC%A0%B8%EC%98%A4%EA%B8%B0(%EC%9D%B4%EB%A6%84,-%ED%99%95%EC%9E%A5%EB%AA%85,-%EA%B2%BD%EB%A1%9C)/">&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;CFileDialog 클래스에서 제공해주는 함수가 여려가지 있습니다.&lt;br /&gt;
그중에 FileDialog에서 파일 정보를 가져오는 자주 쓰이는 함수가 있습니다&lt;/p&gt;

&lt;p&gt;이 글에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;FileDialog에서 1개의 파일을 선택하여 정보를 가져오는 함수&lt;/code&gt;에 대해 알아보겠습니다.&lt;br /&gt;
아래 모든 함수들이 반환하는 타입은 CString입니다.&lt;/p&gt;

&lt;h2 id=&quot;1-확장명이-포함된-파일-이름-구하기&quot;&gt;1. 확장명이 포함된 파일 이름 구하기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;확장명이 포함된 파일 이름&lt;/code&gt;을 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFileName()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;2-확장명-없이-파일-이름만-구하기&quot;&gt;2. 확장명 없이 파일 이름만 구하기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;확장명이 미포함된 파일 이름&lt;/code&gt;만 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFileTitle()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFileTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFileTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;3-파일-확장명-구하기&quot;&gt;3. 파일 확장명 구하기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;확장명&lt;/code&gt;을 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFileExt()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFileExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFileExt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-시작-경로-가져오기&quot;&gt;4. 시작 경로 가져오기&lt;/h2&gt;
&lt;p&gt;반드시 m_ofn.lpstrInitialDir 멤버변수 값이 설정되어 있어야 합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;시작 경로&lt;/code&gt;를 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetFolderPath()&lt;/code&gt; 입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetFolderPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetFolderPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;5-선택한-파일-경로-가져오기&quot;&gt;5. 선택한 파일 경로 가져오기&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;선택한 파일에 대한 경로&lt;/code&gt;를 가져오는 함수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;GetPathName()&lt;/code&gt; 입니다.&lt;br /&gt;
이 함수는 파일이름 및 확장명을 포함하여 선택된 파일에 대한 전체 경로를 가져오게 됩니다.&lt;br /&gt;
CString 클래스 Left(), RevesrseFind() 함수를 이용해 짤라내서 사용할 수 있습니다.
위 함수들은 부모 폴더를 구할 때에도 사용되오니 알아두시는게 좋습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetPathName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileFullPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GetPathName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;CString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileFullPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileFullPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReverseFind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'\\'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resultPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;6-함수를-이용한-결과-출력&quot;&gt;6. 함수를 이용한 결과 출력&lt;/h2&gt;

&lt;p&gt;파일 정보를 가져오는 함수를 이용해 MainDialog에서 간단히 출력해보겠습니다.&lt;br /&gt;
솔루션 이름: MainDialog&lt;br /&gt;
프로젝트 형태: Dialog 기반&lt;/p&gt;

&lt;p&gt;경로 ‘C:\Temp’ 폴더에 존재하는 Text.txt 파일을 선택해보겠습니다.&lt;br /&gt;
결과:&lt;br /&gt;
&lt;img src=&quot;/assets/images/CFileDialog/MFC_ResultFileInfo.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;오타 및 잘못된 내용에 대해 피드백 해주시는건 언제든 환영합니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="프로그래밍" /><category term="Cpp" /><category term="C++" /><category term="MFC" /><category term="Dialog" /><category term="CFileDialog" /><category term="파일" /><category term="이름" /><category term="확장명" /><category term="경로" /><category term="가져오기" /><category term="정보가져오기" /><summary type="html">[MFC][실습] CFileDialog : 파일 정보 가져오기(이름, 확장명, 시작경로, 파일경로)</summary></entry><entry><title type="html">[MFC][실습] CFileDialog : 시작 디렉토리 변경</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%8B%9C%EC%9E%91-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EB%B3%80%EA%B2%BD/" rel="alternate" type="text/html" title="[MFC][실습] CFileDialog : 시작 디렉토리 변경" /><published>2020-04-16T00:00:00+09:00</published><updated>2020-04-16T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog%20-%20%EC%8B%9C%EC%9E%91%20%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC%20%EB%B3%80%EA%B2%BD</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%8B%9C%EC%9E%91-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%EB%B3%80%EA%B2%BD/">&lt;p&gt;CFileDialog를 이용해 FileDialog를 사용자에게 보여줄 때 &lt;br /&gt;
Visual Studio에서 작업했을 경우 FileDialog 시작 디렉토리가 현재 프로젝트로 설정되어 있습니다.&lt;/p&gt;

&lt;p&gt;CFileDialog 객체가 가지고 있는  멤버변수 &lt;code class=&quot;highlighter-rouge&quot;&gt;m_ofn.lpstrInitialDir&lt;/code&gt; 값을 변경하여&lt;br /&gt;
FileDialog 시작 디렉토리를 변경할 수 있습니다.&lt;br /&gt;
디렉토리를 변경하여 해당 디렉토리에 존재하는 파일과 폴더를 보여줄 수 있습니다.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;간단한 코드를 작성해보겠습니다.&lt;/p&gt;
&lt;figcaption&gt;MainDialog.cpp [ FileDialog 초기 디렉토리 변경 ]&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;LRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnInitDialogEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;LPCTSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;All Files (*.*)|*.*;||&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m_ofn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lpstrInitialDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Program Files&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoModal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;
결과:&lt;br /&gt;
&lt;img src=&quot;/assets/images/CFileDialog/MFC_CFileDialog_InitDirectory.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;오타 및 잘못된 내용에 대해 피드백 해주시는건 언제든 환영합니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="프로그래밍" /><category term="Cpp" /><category term="C++" /><category term="MFC" /><category term="Dialog" /><category term="CFileDialog" /><category term="디렉토리 변경" /><category term="경로 변경" /><category term="디렉토리 변경" /><category term="기본경로" /><category term="처음경로" /><category term="경로" /><summary type="html">[MFC][실습] CFileDialog : 시작 디렉토리 변경</summary></entry><entry><title type="html">[MFC] CFileDialog : 설명 및 파일확장명 필터</title><link href="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%84%A4%EB%AA%85/" rel="alternate" type="text/html" title="[MFC] CFileDialog : 설명 및 파일확장명 필터" /><published>2020-04-13T00:00:00+09:00</published><updated>2020-04-17T00:00:00+09:00</updated><id>https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog%20-%20%EC%84%A4%EB%AA%85</id><content type="html" xml:base="https://tars-c.github.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/mfc/cfiledialog/CFileDialog-%EC%84%A4%EB%AA%85/">&lt;h2 id=&quot;관련-링크&quot;&gt;관련 링크&lt;/h2&gt;
&lt;p&gt;없음&lt;/p&gt;

&lt;h2 id=&quot;서론&quot;&gt;서론&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;이 글에서는 CFileDialog가 제공하는 함수 및 변수를 이용한 실습은 다루지 않습니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;MFC에서 사용자는 CFileDialog를 이용해 편리하게 파일을 저장하고 열 수 있습니다.&lt;br /&gt;
흔히 사용되는 메모장 프로그램에서도 FileDialog를 볼 수 있습니다.&lt;br /&gt;
CFileDialog는 Modal Dialog 방식을 이용해&lt;br /&gt;
DoModa() 함수를 호출하여 사용자에게 보여주고 사용합니다.
인스턴스를 생성 후 EndDialog() 함수를 호출하여 객체를 소멸하지 않아도 자동으로 처리됩니다.&lt;/p&gt;

&lt;p&gt;CFileDialog 인스턴스를 생성하여 사용자에게 FileDialog를 보여주고&lt;br /&gt;
파일을 선택하면 파일에 대한 정보를 CFileDialog 인스턴스로 가져오게 됩니다.&lt;br /&gt;
인스턴스 멤버변수에 접근하여 관련된 정보를 사용할 수 있습니다.&lt;/p&gt;

&lt;p&gt;함수 매개변수를 살펴봅시다.&lt;/p&gt;
&lt;figcaption&gt;CFileDialog Function Arguments&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;explicit&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CFileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bOpenFileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LPCTSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpszDefExt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LPCTSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpszFileName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dwFlags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OFN_HIDEREADONLY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OFN_OVERWRITEPROMPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LPCTSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpszFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;CWnd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pParentWnd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DWORD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dwSize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bVistaStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;cfiledialog-매개변수&quot;&gt;CFileDialog 매개변수&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;CFileDialog 인스턴스를 생성하기 위해서는 8가지 매개변수가 필요합니다.
    &lt;ol&gt;
      &lt;li&gt;FileDialog 파일 열기 및 저장 모드&lt;/li&gt;
      &lt;li&gt;기본 확장자 (저장 시 사용됨)&lt;/li&gt;
      &lt;li&gt;기본 파일명&lt;/li&gt;
      &lt;li&gt;열기모드 flags&lt;/li&gt;
      &lt;li&gt;필터&lt;/li&gt;
      &lt;li&gt;부모 윈도우&lt;/li&gt;
      &lt;li&gt;OPENFILENAME 구조체의 크기입니다.&lt;/li&gt;
      &lt;li&gt;비스타 스타일&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하나씩 풀어봅시다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;파일을 여는건 TRUE, 저장하는건 FALSE입니다.&lt;/li&gt;
  &lt;li&gt;기본확장자는 저장시에만 사용되며 필터링이 모든 파일(*.*)인 상태에서 사용가능합니다.&lt;br /&gt;  단순히 파일을 저장하는 것이라면 NULL을 추천드립니다.&lt;/li&gt;
  &lt;li&gt;기본파일명은 저장 및 열기할 때 아래 ‘파일 이름’ 란에 &lt;br /&gt;기본적으로 적혀있는 파일 이름을 나타냅니다.&lt;/li&gt;
  &lt;li&gt;OPENFILENAME 구조체에 해당하는 플래그 값을 의미합니다.&lt;/li&gt;
  &lt;li&gt;사용자가 해당 확장명을 가진 파일만 볼 수 있게 해주는 파일 확장명 필터입니다.&lt;/li&gt;
  &lt;li&gt;부모 윈도우를 의미합니다.&lt;br /&gt;  부모 윈도우를 지정하는 이유는 부모창에서 Dialog를 띄워서 보여주기 때문입니다.&lt;/li&gt;
  &lt;li&gt;OPENFILENAME 구조체의 크기를 이용하여 적절한 종류의 대화상자를 결정하게 됩니다. (기본값 사용)&lt;/li&gt;
  &lt;li&gt;TRUE는 비스타 윈도우 스타일을 사용하고 FALSE는 윈도우10 스타일을 사용합니다.&lt;br /&gt;  Windows10 기준, Visual Studio 2008 이상&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Vista Style: 적용(열기모드)&lt;br /&gt;
&lt;img src=&quot;/assets/images/CFileDialog/vista_style_dialog.png&quot; alt=&quot;img1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vista Style: 미적용(열기모드)&lt;br /&gt;
&lt;img src=&quot;/assets/images/CFileDialog/window10_style_dialog.png&quot; alt=&quot;img2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;cfiledialog-확장명을-필터링---필터설명&quot;&gt;CFileDialog 확장명을 필터링 - 필터설명&lt;/h2&gt;
&lt;p&gt;FileDialog는 확장명에 대해서 필터링 할 수 있습니다.&lt;br /&gt;
여러 확장명을 필터링 할 수 있고, FileDialog 필터 리스트에 여러개의 필터를 추가할 수 있습니다.&lt;/p&gt;

&lt;p&gt;필터(Filter)는 &lt;code class=&quot;highlighter-rouge&quot;&gt;필터설명&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;필터확장명&lt;/code&gt; 으로 구성되어 있습니다.&lt;br /&gt;
각 구성 요소들은 &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; 를 사용하여 구분하게 됩니다.&lt;br /&gt;
필터에 대한 텍스트 틀은 &lt;code class=&quot;highlighter-rouge&quot;&gt;필터설명 | 필터확장명; ||&lt;/code&gt;입니다.&lt;br /&gt;
마치 문자열 끝에 널값이 들어가듯이 필터 끝에는 || 문자가 2개 들어갑니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;필터설명&lt;/code&gt;은 정말 필터에 대한 설명을 의미하기 때문에 아무거나 입력하셔도 됩니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;필터설명&lt;/code&gt; 요소 맨 뒤에는 필터링 할 파일확장명을 써주는 것이 좋습니다.&lt;br /&gt;
파일확장명을 쓰지 않을 경우 자동으로 구성요소 필터확장명에 적은적은 내용이 소괄호(,)로 감싸서&lt;br /&gt;
필터설명 끝에 덧붙여 FileDialog &lt;code class=&quot;highlighter-rouge&quot;&gt;필터 리스트&lt;/code&gt;에 나타납니다.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;예시:
	case1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;필터설명에 파일 확장명 미기입&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
		필터설명: Binary Files
		필터확장명: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bin&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hex&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		출력되는 필터명: Binary Files&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bin&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hex&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

	case2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;파일 확장명 기입&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
		필터설명: Binary Files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bin, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
		필터확장명: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bin&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hex&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		필터 리스트: Binary Files &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.bin, &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;필터설명은 보통 All Files (*.*) 처럼 알아보기 쉽게&lt;br /&gt;
간단한 필터에 대한 설명과 함께 확장명을 써주는 것이 좋습니다.&lt;/p&gt;

&lt;h2 id=&quot;cfiledialog-확장명을-필터링---필터확장명&quot;&gt;CFileDialog 확장명을 필터링 - 필터확장명&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;필터확장명&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;필터할 파일 확장명&lt;/code&gt;을 의미합니다.&lt;/p&gt;

&lt;p&gt;필터설명에 확장명을 적더라도 두번째 요소에 해당하는&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;파일확장명을 어떻게 적냐에 따라서 FileDialog에서 파일을 필터링하게 되는 점&lt;/code&gt;을 유의하셔야 합니다.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;필터확장명&lt;/code&gt;은 파일확장명을 &lt;code class=&quot;highlighter-rouge&quot;&gt;*.bin; *.txt;&lt;/code&gt; 처럼 입력하면 파일을 필터링할 수 있습니다.&lt;br /&gt;
필터링할 확장명을 입력하고 반드시 세미콜론(;)을 끝에 써줘야합니다.&lt;br /&gt;
세미콜론(;)을 써주지 않은 경우 필터가 제대로 작동하지 않을 수 있습니다.&lt;br /&gt;
만약 1개의 필터에서 3개의 확장명을 필터링한다면 필요한 세미콜론(;)은 3개입니다.&lt;/p&gt;

&lt;p&gt;확장명을 필터링하는 예시를 적어보겠습니다.&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 1개의 필터에서 모든 파일 확장명을 필터링해보겠습니다.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 1개의 필터에서 2개의 파일 확장명을 필터링해보겠습니다.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Image&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 2개의 필터에서 각각 1개의 파일 확장명을 필터링해보겠습니다.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IMG&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;위 필터를 사용하게 되면 텍스트(*.txt) 그리고 이미지(*.jpg) 파일이 입력한 필터에 맞게 필터링 되어&lt;br /&gt;
폴더를 제외하고 해당하는 확장명을 가진 파일에 대해서만 FileDialog 필터 리스트에서 보여지게 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;cfiledialog-생성&quot;&gt;CFileDialog 생성&lt;/h2&gt;
&lt;p&gt;FileDialog 생성 코드를 적어보겠습니다.&lt;/p&gt;
&lt;figcaption&gt;MainDialog.cpp [ FileDialog 띄우기(저장모드) ]&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;LRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnInitDialogEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;LPCTSTR&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;filesFilter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;All Files (*.*)| *.*; ||&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dlg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myTextFile&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filesFilter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;dlg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoModal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figcaption&gt;MainDialog.cpp [ 간단하게 FileDialog 띄우기(저장모드) ]&lt;/figcaption&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;LRESULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MainDialog&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OnInitDialogEx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPARAM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lParam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;CFileDialog&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;fileDialog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DoModal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;
&lt;ul&gt;
  &lt;li&gt;오타 및 잘못된 내용에 대해 피드백 해주시는건 언제든 환영합니다.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>타스 (TARS-C)</name></author><category term="타스" /><category term="프로그래밍" /><category term="Cpp" /><category term="C++" /><category term="MFC" /><category term="Dialog" /><category term="CFileDialog" /><category term="파일다이얼로그" /><category term="파일" /><category term="CFile" /><summary type="html">[MFC] CFileDialog : 설명 및 파일확장명 필터</summary></entry></feed>